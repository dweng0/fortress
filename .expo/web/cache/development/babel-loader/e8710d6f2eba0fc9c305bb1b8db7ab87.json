{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\fortress\\\\App.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Font from 'expo-font';\nimport { Router, Stack, Scene } from 'react-native-router-flux';\nimport OutterWrapper from \"./src/components/wrapper\";\nimport Row from \"./src/components/row\";\nimport Home from \"./src/pages/Home\";\nimport Settings from \"./src/pages/Settings\";\nimport Exercise from \"./src/pages/Exercise\";\nexport default function App() {\n  var [fontLoaded, setFontLoaded] = useState(false);\n  useEffect(() => {\n    var loadFonts = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          yield Font.loadAsync({\n            'poppins': require(\"./assets/fonts/Poppins-SemiBold.ttf\")\n          });\n          setFontLoaded(true);\n        } catch (e) {\n          console.log('failed to load custom font... ');\n        }\n      });\n\n      return function loadFonts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    loadFonts();\n  }, []);\n\n  if (fontLoaded) {\n    return React.createElement(Router, {\n      navBar: NavBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      }\n    }, React.createElement(Stack, {\n      key: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      }\n    }, React.createElement(Scene, {\n      key: \"index\",\n      component: Home,\n      hideNavBar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      }\n    }), React.createElement(Scene, {\n      key: \"settings\",\n      component: Settings,\n      hideNavBar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      }\n    }), React.createElement(Scene, {\n      key: \"exercise\",\n      component: Exercise,\n      hideNavBar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      }\n    })));\n  } else {\n    return React.createElement(OutterWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      }\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      }\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      }\n    }))));\n  }\n}","map":{"version":3,"sources":["G:/projects/fortress/App.js"],"names":["React","useEffect","useState","Font","Router","Stack","Scene","OutterWrapper","Row","Home","Settings","Exercise","App","fontLoaded","setFontLoaded","loadFonts","loadAsync","require","e","console","log","NavBar"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,QAAqC,0BAArC;AACA,OAAOC,aAAP;AACA,OAAOC,GAAP;AAEA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC1B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAAE,QAAMc,SAAS;AAAA,mCAAG,aAAY;AAC1C,YAAI;AACA,gBAAMZ,IAAI,CAACa,SAAL,CAAe;AACjB,uBAAWC,OAAO;AADD,WAAf,CAAN;AAIAH,UAAAA,aAAa,CAAC,IAAD,CAAb;AACH,SAND,CAOA,OAAMI,CAAN,EAAS;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH;AAEJ,OAZ8B;;AAAA,sBAATL,SAAS;AAAA;AAAA;AAAA,OAAf;;AAahBA,IAAAA,SAAS;AACR,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAGF,UAAH,EACA;AAEI,WACI,oBAAC,MAAD;AAAS,MAAA,MAAM,EAAIQ,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAmB,MAAA,SAAS,EAAEZ,IAA9B;AAAoC,MAAA,UAAU,EAAE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAsB,MAAA,SAAS,EAAEC,QAAjC;AAA2C,MAAA,UAAU,EAAE,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAsB,MAAA,SAAS,EAAEC,QAAjC;AAA2C,MAAA,UAAU,EAAE,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ;AASH,GAZD,MAcA;AACI,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAFJ,CADJ;AAUH;AAEJ","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {ActivityIndicator, View, Text}  from \"react-native\";\r\nimport * as Font from 'expo-font';\r\nimport { Router, Stack, Scene } from 'react-native-router-flux';\r\nimport OutterWrapper from \"./src/components/wrapper\";\r\nimport Row from \"./src/components/row\";\r\n\r\nimport Home from './src/pages/Home';\r\nimport Settings from './src/pages/Settings';\r\nimport Exercise from './src/pages/Exercise';\r\n\r\nexport default function App() {\r\n    const [fontLoaded, setFontLoaded] = useState(false);\r\n\r\n    useEffect(()=>{ const loadFonts = async () => {\r\n        try {\r\n            await Font.loadAsync({\r\n                'poppins': require('./assets/fonts/Poppins-SemiBold.ttf')\r\n\t\t\t});\r\n\r\n            setFontLoaded(true);\r\n        }\r\n        catch(e) {\r\n            console.log('failed to load custom font... ')\r\n        }\r\n\r\n    }\r\n    loadFonts();\r\n    }, []);\r\n\r\n    if(fontLoaded)\r\n    {\r\n\r\n        return (\r\n            <Router  navBar = {NavBar}>\r\n                <Stack key=\"root\">\r\n                    <Scene key=\"index\" component={Home} hideNavBar={true}/>\r\n                    <Scene key=\"settings\" component={Settings} hideNavBar={true}/>\r\n                    <Scene key=\"exercise\" component={Exercise} hideNavBar={true}/>\r\n                </Stack>\r\n            </Router>\r\n        );\r\n    }\r\n    else\r\n    {\r\n        return(\r\n            <OutterWrapper>\r\n                <Row/>\r\n                <Row>\r\n                    <View>\r\n                        <ActivityIndicator size=\"large\" color=\"#000\" />\r\n                    </View>\r\n                </Row>\r\n            </OutterWrapper>\r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}