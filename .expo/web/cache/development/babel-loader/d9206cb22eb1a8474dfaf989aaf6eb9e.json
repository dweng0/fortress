{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\fortress\\\\node_modules\\\\react-navigation-deprecated-tab-navigator\\\\src\\\\views\\\\TabBarBottom.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { SafeAreaView, NavigationActions, withOrientation, StackActions } from 'react-navigation';\nimport TabBarIcon from \"./TabBarIcon\";\nvar majorVersion = parseInt(Platform.Version, 10);\nvar isIos = Platform.OS === 'ios';\nvar isIOS11 = majorVersion >= 11 && isIos;\nvar defaultMaxTabBarItemWidth = 125;\n\nclass TabBarBottom extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this._renderLabel = scene => {\n      var {\n        position,\n        navigation,\n        activeTintColor,\n        inactiveTintColor,\n        labelStyle,\n        showLabel,\n        showIcon,\n        isLandscape,\n        allowFontScaling\n      } = this.props;\n\n      if (showLabel === false) {\n        return null;\n      }\n\n      var {\n        index\n      } = scene;\n      var {\n        routes\n      } = navigation.state;\n      var inputRange = [-1, ...routes.map((x, i) => i)];\n      var outputRange = inputRange.map(inputIndex => inputIndex === index ? activeTintColor : inactiveTintColor);\n      var color = position.interpolate({\n        inputRange,\n        outputRange: outputRange\n      });\n      var tintColor = scene.focused ? activeTintColor : inactiveTintColor;\n      var label = this.props.getLabel(_objectSpread({}, scene, {\n        tintColor\n      }));\n\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          numberOfLines: 1,\n          style: [styles.label, {\n            color\n          }, showIcon && this._shouldUseHorizontalTabs() ? styles.labelBeside : styles.labelBeneath, labelStyle],\n          allowFontScaling: allowFontScaling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          }\n        }, label);\n      }\n\n      if (typeof label === 'function') {\n        return label(_objectSpread({}, scene, {\n          tintColor\n        }));\n      }\n\n      return label;\n    };\n\n    this._renderIcon = scene => {\n      var {\n        position,\n        navigation,\n        activeTintColor,\n        inactiveTintColor,\n        renderIcon,\n        showIcon,\n        showLabel\n      } = this.props;\n\n      if (showIcon === false) {\n        return null;\n      }\n\n      var horizontal = this._shouldUseHorizontalTabs();\n\n      return React.createElement(TabBarIcon, {\n        position: position,\n        navigation: navigation,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        scene: scene,\n        style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        }\n      });\n    };\n\n    this._renderTestIDProps = scene => {\n      var testIDProps = this.props.getTestIDProps && this.props.getTestIDProps(scene);\n      return testIDProps;\n    };\n\n    this._handleTabPress = index => {\n      var {\n        jumpToIndex,\n        navigation\n      } = this.props;\n      var currentIndex = navigation.state.index;\n\n      if (currentIndex === index) {\n        var childRoute = navigation.state.routes[index];\n\n        if (childRoute.hasOwnProperty('index') && childRoute.index > 0) {\n          navigation.dispatch(StackActions.popToTop({\n            key: childRoute.key\n          }));\n        } else {}\n      } else {\n        jumpToIndex(index);\n      }\n    };\n  }\n\n  _tabItemMaxWidth() {\n    var {\n      tabStyle,\n      layout\n    } = this.props;\n    var maxTabBarItemWidth;\n    var flattenedTabStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedTabStyle) {\n      if (typeof flattenedTabStyle.width === 'number') {\n        maxTabBarItemWidth = flattenedTabStyle.width;\n      } else if (typeof flattenedTabStyle.width === 'string' && flattenedTabStyle.width.endsWith('%')) {\n        var width = parseFloat(flattenedTabStyle.width);\n\n        if (Number.isFinite(width)) {\n          maxTabBarItemWidth = layout.width * (width / 100);\n        }\n      } else if (typeof flattenedTabStyle.maxWidth === 'number') {\n        maxTabBarItemWidth = flattenedTabStyle.maxWidth;\n      } else if (typeof flattenedTabStyle.maxWidth === 'string' && flattenedTabStyle.width.endsWith('%')) {\n        var _width = parseFloat(flattenedTabStyle.maxWidth);\n\n        if (Number.isFinite(_width)) {\n          maxTabBarItemWidth = layout.width * (_width / 100);\n        }\n      }\n    }\n\n    if (!maxTabBarItemWidth) {\n      maxTabBarItemWidth = defaultMaxTabBarItemWidth;\n    }\n\n    return maxTabBarItemWidth;\n  }\n\n  _shouldUseHorizontalTabs() {\n    var {\n      routes\n    } = this.props.navigation.state;\n    var {\n      isLandscape,\n      layout,\n      adaptive,\n      tabStyle\n    } = this.props;\n\n    if (!adaptive) {\n      return false;\n    }\n\n    var tabBarWidth = layout.width;\n\n    if (tabBarWidth === 0) {\n      return Platform.isPad;\n    }\n\n    if (!Platform.isPad) {\n      return isLandscape;\n    } else {\n      var maxTabBarItemWidth = this._tabItemMaxWidth();\n\n      return routes.length * maxTabBarItemWidth <= tabBarWidth;\n    }\n  }\n\n  render() {\n    var {\n      position,\n      navigation,\n      jumpToIndex,\n      getOnPress,\n      getTestIDProps,\n      activeBackgroundColor,\n      inactiveBackgroundColor,\n      style,\n      animateStyle,\n      tabStyle,\n      isLandscape\n    } = this.props;\n    var {\n      routes\n    } = navigation.state;\n    var previousScene = routes[navigation.state.index];\n    var inputRange = [-1, ...routes.map((x, i) => i)];\n    var tabBarStyle = [styles.tabBar, this._shouldUseHorizontalTabs() && !Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, style];\n    return React.createElement(Animated.View, {\n      style: animateStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      }\n    }, React.createElement(SafeAreaView, {\n      style: tabBarStyle,\n      forceInset: {\n        bottom: 'always',\n        top: 'never'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      }\n    }, routes.map((route, index) => {\n      var focused = index === navigation.state.index;\n      var scene = {\n        route,\n        index,\n        focused\n      };\n\n      var _onPress = getOnPress(previousScene, scene);\n\n      var outputRange = inputRange.map(inputIndex => inputIndex === index ? activeBackgroundColor : inactiveBackgroundColor);\n      var backgroundColor = position.interpolate({\n        inputRange,\n        outputRange: outputRange\n      });\n      var justifyContent = this.props.showIcon ? 'flex-end' : 'center';\n      var extraProps = this._renderTestIDProps(scene) || {};\n      var {\n        testID,\n        accessibilityLabel\n      } = extraProps;\n      return React.createElement(TouchableWithoutFeedback, {\n        key: route.key,\n        testID: testID,\n        accessibilityLabel: accessibilityLabel,\n        onPress: () => _onPress ? _onPress({\n          previousScene,\n          scene,\n          jumpToIndex,\n          defaultHandler: this._handleTabPress\n        }) : this._handleTabPress(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.tab, {\n          backgroundColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        }\n      }, React.createElement(View, {\n        style: [styles.tab, this._shouldUseHorizontalTabs() ? styles.tabLandscape : styles.tabPortrait, tabStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        }\n      }, this._renderIcon(scene), this._renderLabel(scene))));\n    })));\n  }\n\n}\n\nTabBarBottom.defaultProps = {\n  activeTintColor: '#3478f6',\n  activeBackgroundColor: 'transparent',\n  inactiveTintColor: '#929292',\n  inactiveBackgroundColor: 'transparent',\n  showLabel: true,\n  showIcon: true,\n  allowFontScaling: true,\n  adaptive: isIOS11\n};\nvar DEFAULT_HEIGHT = 49;\nvar COMPACT_HEIGHT = 29;\nvar styles = StyleSheet.create({\n  tabBar: {\n    backgroundColor: '#F7F7F7',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: 'rgba(0, 0, 0, .3)',\n    flexDirection: 'row'\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconWithoutLabel: {\n    flex: 1\n  },\n  iconWithLabel: {\n    flex: 1\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 10,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20\n  }\n});\nexport default withOrientation(TabBarBottom);","map":{"version":3,"sources":["G:/projects/fortress/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabBarBottom.js"],"names":["React","SafeAreaView","NavigationActions","withOrientation","StackActions","TabBarIcon","majorVersion","parseInt","Platform","Version","isIos","OS","isIOS11","defaultMaxTabBarItemWidth","TabBarBottom","PureComponent","_renderLabel","scene","position","navigation","activeTintColor","inactiveTintColor","labelStyle","showLabel","showIcon","isLandscape","allowFontScaling","props","index","routes","state","inputRange","map","x","i","outputRange","inputIndex","color","interpolate","tintColor","focused","label","getLabel","styles","_shouldUseHorizontalTabs","labelBeside","labelBeneath","_renderIcon","renderIcon","horizontal","iconWithExplicitHeight","iconWithoutLabel","iconWithLabel","_renderTestIDProps","testIDProps","getTestIDProps","_handleTabPress","jumpToIndex","currentIndex","childRoute","hasOwnProperty","dispatch","popToTop","key","_tabItemMaxWidth","tabStyle","layout","maxTabBarItemWidth","flattenedTabStyle","StyleSheet","flatten","width","endsWith","parseFloat","Number","isFinite","maxWidth","adaptive","tabBarWidth","isPad","length","render","getOnPress","activeBackgroundColor","inactiveBackgroundColor","style","animateStyle","previousScene","tabBarStyle","tabBar","tabBarCompact","tabBarRegular","bottom","top","route","onPress","backgroundColor","justifyContent","extraProps","testID","accessibilityLabel","defaultHandler","tab","tabLandscape","tabPortrait","defaultProps","DEFAULT_HEIGHT","COMPACT_HEIGHT","create","borderTopWidth","hairlineWidth","borderTopColor","flexDirection","height","flex","alignItems","textAlign","fontSize","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  Platform,\n  Keyboard,\n} from 'react-native';\nimport {\n  SafeAreaView,\n  NavigationActions,\n  withOrientation,\n  StackActions,\n} from 'react-navigation';\n\nimport TabBarIcon from './TabBarIcon';\n\nconst majorVersion = parseInt(Platform.Version, 10);\nconst isIos = Platform.OS === 'ios';\nconst isIOS11 = majorVersion >= 11 && isIos;\nconst defaultMaxTabBarItemWidth = 125;\n\nclass TabBarBottom extends React.PureComponent {\n  // See https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/UIKitUICatalog/UITabBar.html\n  static defaultProps = {\n    activeTintColor: '#3478f6', // Default active tint color in iOS 10\n    activeBackgroundColor: 'transparent',\n    inactiveTintColor: '#929292', // Default inactive tint color in iOS 10\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11,\n  };\n\n  _renderLabel = scene => {\n    const {\n      position,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      labelStyle,\n      showLabel,\n      showIcon,\n      isLandscape,\n      allowFontScaling,\n    } = this.props;\n    if (showLabel === false) {\n      return null;\n    }\n    const { index } = scene;\n    const { routes } = navigation.state;\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n    const outputRange = inputRange.map(\n      inputIndex => (inputIndex === index ? activeTintColor : inactiveTintColor)\n    );\n    const color = position.interpolate({\n      inputRange,\n      outputRange: outputRange,\n    });\n\n    const tintColor = scene.focused ? activeTintColor : inactiveTintColor;\n    const label = this.props.getLabel({ ...scene, tintColor });\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            showIcon && this._shouldUseHorizontalTabs()\n              ? styles.labelBeside\n              : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({ ...scene, tintColor });\n    }\n\n    return label;\n  };\n\n  _renderIcon = scene => {\n    const {\n      position,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      showIcon,\n      showLabel,\n    } = this.props;\n    if (showIcon === false) {\n      return null;\n    }\n\n    const horizontal = this._shouldUseHorizontalTabs();\n\n    return (\n      <TabBarIcon\n        position={position}\n        navigation={navigation}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        scene={scene}\n        style={[\n          styles.iconWithExplicitHeight,\n          showLabel === false && !horizontal && styles.iconWithoutLabel,\n          showLabel !== false && !horizontal && styles.iconWithLabel,\n        ]}\n      />\n    );\n  };\n\n  _renderTestIDProps = scene => {\n    const testIDProps =\n      this.props.getTestIDProps && this.props.getTestIDProps(scene);\n    return testIDProps;\n  };\n\n  _tabItemMaxWidth() {\n    const { tabStyle, layout } = this.props;\n    let maxTabBarItemWidth;\n\n    const flattenedTabStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedTabStyle) {\n      if (typeof flattenedTabStyle.width === 'number') {\n        maxTabBarItemWidth = flattenedTabStyle.width;\n      } else if (\n        typeof flattenedTabStyle.width === 'string' &&\n        flattenedTabStyle.width.endsWith('%')\n      ) {\n        const width = parseFloat(flattenedTabStyle.width);\n        if (Number.isFinite(width)) {\n          maxTabBarItemWidth = layout.width * (width / 100);\n        }\n      } else if (typeof flattenedTabStyle.maxWidth === 'number') {\n        maxTabBarItemWidth = flattenedTabStyle.maxWidth;\n      } else if (\n        typeof flattenedTabStyle.maxWidth === 'string' &&\n        flattenedTabStyle.width.endsWith('%')\n      ) {\n        const width = parseFloat(flattenedTabStyle.maxWidth);\n        if (Number.isFinite(width)) {\n          maxTabBarItemWidth = layout.width * (width / 100);\n        }\n      }\n    }\n\n    if (!maxTabBarItemWidth) {\n      maxTabBarItemWidth = defaultMaxTabBarItemWidth;\n    }\n\n    return maxTabBarItemWidth;\n  }\n\n  _shouldUseHorizontalTabs() {\n    const { routes } = this.props.navigation.state;\n    const { isLandscape, layout, adaptive, tabStyle } = this.props;\n\n    if (!adaptive) {\n      return false;\n    }\n\n    let tabBarWidth = layout.width;\n    if (tabBarWidth === 0) {\n      return Platform.isPad;\n    }\n\n    if (!Platform.isPad) {\n      return isLandscape;\n    } else {\n      const maxTabBarItemWidth = this._tabItemMaxWidth();\n      return routes.length * maxTabBarItemWidth <= tabBarWidth;\n    }\n  }\n\n  _handleTabPress = index => {\n    const { jumpToIndex, navigation } = this.props;\n    const currentIndex = navigation.state.index;\n\n    if (currentIndex === index) {\n      let childRoute = navigation.state.routes[index];\n      if (childRoute.hasOwnProperty('index') && childRoute.index > 0) {\n        navigation.dispatch(\n          StackActions.popToTop({ key: childRoute.key })\n        );\n      } else {\n        // TODO: do something to scroll to top\n      }\n    } else {\n      jumpToIndex(index);\n    }\n  };\n\n  render() {\n    const {\n      position,\n      navigation,\n      jumpToIndex,\n      getOnPress,\n      getTestIDProps,\n      activeBackgroundColor,\n      inactiveBackgroundColor,\n      style,\n      animateStyle,\n      tabStyle,\n      isLandscape,\n    } = this.props;\n    const { routes } = navigation.state;\n    const previousScene = routes[navigation.state.index];\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n\n    const tabBarStyle = [\n      styles.tabBar,\n      this._shouldUseHorizontalTabs() && !Platform.isPad\n        ? styles.tabBarCompact\n        : styles.tabBarRegular,\n      style,\n    ];\n\n    return (\n      <Animated.View style={animateStyle}>\n        <SafeAreaView\n          style={tabBarStyle}\n          forceInset={{ bottom: 'always', top: 'never' }}\n        >\n          {routes.map((route, index) => {\n            const focused = index === navigation.state.index;\n            const scene = { route, index, focused };\n            const onPress = getOnPress(previousScene, scene);\n            const outputRange = inputRange.map(\n              inputIndex =>\n                inputIndex === index\n                  ? activeBackgroundColor\n                  : inactiveBackgroundColor\n            );\n            const backgroundColor = position.interpolate({\n              inputRange,\n              outputRange: outputRange,\n            });\n\n            const justifyContent = this.props.showIcon ? 'flex-end' : 'center';\n            const extraProps = this._renderTestIDProps(scene) || {};\n            const { testID, accessibilityLabel } = extraProps;\n\n            return (\n              <TouchableWithoutFeedback\n                key={route.key}\n                testID={testID}\n                accessibilityLabel={accessibilityLabel}\n                onPress={() =>\n                  onPress\n                    ? onPress({\n                        previousScene,\n                        scene,\n                        jumpToIndex,\n                        defaultHandler: this._handleTabPress,\n                      })\n                    : this._handleTabPress(index)\n                }\n              >\n                <Animated.View style={[styles.tab, { backgroundColor }]}>\n                  <View\n                    style={[\n                      styles.tab,\n                      this._shouldUseHorizontalTabs()\n                        ? styles.tabLandscape\n                        : styles.tabPortrait,\n                      tabStyle,\n                    ]}\n                  >\n                    {this._renderIcon(scene)}\n                    {this._renderLabel(scene)}\n                  </View>\n                </Animated.View>\n              </TouchableWithoutFeedback>\n            );\n          })}\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nconst DEFAULT_HEIGHT = 49;\nconst COMPACT_HEIGHT = 29;\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    backgroundColor: '#F7F7F7', // Default background color in iOS 10\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: 'rgba(0, 0, 0, .3)',\n    flexDirection: 'row',\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT,\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT,\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconWithoutLabel: {\n    flex: 1,\n  },\n  iconWithLabel: {\n    flex: 1,\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT,\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 10,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n  },\n});\n\nexport default withOrientation(TabBarBottom);\n"]},"metadata":{},"sourceType":"module"}