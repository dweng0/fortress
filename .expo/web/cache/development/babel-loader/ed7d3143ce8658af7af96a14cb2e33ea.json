{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\fortress\\\\node_modules\\\\react-navigation\\\\src\\\\views\\\\withNavigation.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from \"../utils/invariant\";\nimport { NavigationConsumer } from \"./NavigationContext\";\nexport default function withNavigation(Component) {\n  class ComponentWithNavigation extends React.Component {\n    render() {\n      var navigationProp = this.props.navigation;\n      return React.createElement(NavigationConsumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        }\n      }, navigationContext => {\n        var navigation = navigationProp || navigationContext;\n        invariant(!!navigation, 'withNavigation can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.');\n        return React.createElement(Component, _extends({}, this.props, {\n          navigation: navigation,\n          ref: this.props.onRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          }\n        }));\n      });\n    }\n\n  }\n\n  ComponentWithNavigation.displayName = \"withNavigation(\".concat(Component.displayName || Component.name, \")\");\n  return hoistStatics(ComponentWithNavigation, Component);\n}","map":{"version":3,"sources":["G:/projects/fortress/node_modules/react-navigation/src/views/withNavigation.js"],"names":["React","hoistStatics","invariant","NavigationConsumer","withNavigation","Component","ComponentWithNavigation","render","navigationProp","props","navigation","navigationContext","onRef","displayName","name"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,SAAP;AACA,SAASC,kBAAT;AAEA,eAAe,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AAChD,QAAMC,uBAAN,SAAsCN,KAAK,CAACK,SAA5C,CAAsD;AAIpDE,IAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAG,KAAKC,KAAL,CAAWC,UAAlC;AACA,aACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,iBAAiB,IAAI;AACpB,YAAMD,UAAU,GAAGF,cAAc,IAAIG,iBAArC;AACAT,QAAAA,SAAS,CACP,CAAC,CAACQ,UADK,EAEP,wJAFO,CAAT;AAIA,eACE,oBAAC,SAAD,eACM,KAAKD,KADX;AAEE,UAAA,UAAU,EAAEC,UAFd;AAGE,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWG,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,OAdH,CADF;AAkBD;;AAxBmD;;AAAhDN,EAAAA,uBAD0C,CAEvCO,WAFuC,4BAEPR,SAAS,CAACQ,WAAV,IACrCR,SAAS,CAACS,IAHkC;AA4BhD,SAAOb,YAAY,CAACK,uBAAD,EAA0BD,SAA1B,CAAnB;AACD","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from '../utils/invariant';\nimport { NavigationConsumer } from './NavigationContext';\n\nexport default function withNavigation(Component) {\n  class ComponentWithNavigation extends React.Component {\n    static displayName = `withNavigation(${Component.displayName ||\n      Component.name})`;\n\n    render() {\n      const navigationProp = this.props.navigation;\n      return (\n        <NavigationConsumer>\n          {navigationContext => {\n            const navigation = navigationProp || navigationContext;\n            invariant(\n              !!navigation,\n              'withNavigation can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.'\n            );\n            return (\n              <Component\n                {...this.props}\n                navigation={navigation}\n                ref={this.props.onRef}\n              />\n            );\n          }}\n        </NavigationConsumer>\n      );\n    }\n  }\n\n  return hoistStatics(ComponentWithNavigation, Component);\n}\n"]},"metadata":{},"sourceType":"module"}