{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\fortress\\\\src\\\\pages\\\\Settings.js\";\nimport React, { useState } from 'react';\nimport { Actions } from \"react-native-router-flux\";\nimport OutterWrapper from \"../components/wrapper\";\nimport RegisterForm from \"../components/emailandpassword\";\nimport Row from \"../components/row\";\nimport Label from \"../components/label\";\nimport Button from \"../components/button\";\nimport { useDocument } from \"../hooks\";\nvar content = {\n  missing: 'please fill in the required fields',\n  submit: 'next',\n  cancel: 'cancel'\n};\nexport default (props => {\n  var [email, setEmail] = useState('');\n  var [password, setPassword] = useState('');\n  var [message, setMessage] = useState(null);\n  var [hasErrors, setHasErrors] = useState(false);\n  var {\n    service\n  } = props;\n  var firebase = service;\n\n  var wrappedValidation = () => {};\n\n  var submitRegistration = () => {\n    if (email && password) {\n      setMessage('Registering....');\n      service.auth().createUserWithEmailAndPassword(email, password).then(response => {\n        service.auth().createUserWithEmailAndPassword(email, password).catch(function (error) {\n          setMessage(error.message);\n        });\n        Actions.surgerySelect();\n      }).catch(e => {\n        setMessage(e.message);\n      });\n    } else {\n      setMessage(content.missing);\n    }\n  };\n\n  return React.createElement(OutterWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    }\n  }, React.createElement(RegisterForm, {\n    confirmPassword: true,\n    email: mail => {\n      setEmail(mail);\n    },\n    password: pass => {\n      setPassword(pass);\n    },\n    errors: err => setHasErrors(!!err),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    }\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    }\n  }, React.createElement(Label, {\n    size: \"small\",\n    position: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }, message ? message : ''), React.createElement(Button, {\n    onPress: () => submitRegistration(),\n    title: content.submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    }\n  }), React.createElement(Button, {\n    onPress: () => Actions.login(),\n    title: content.cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  })));\n});","map":{"version":3,"sources":["G:/projects/fortress/src/pages/Settings.js"],"names":["React","useState","Actions","OutterWrapper","RegisterForm","Row","Label","Button","useDocument","content","missing","submit","cancel","props","email","setEmail","password","setPassword","message","setMessage","hasErrors","setHasErrors","service","firebase","wrappedValidation","submitRegistration","auth","createUserWithEmailAndPassword","then","response","catch","error","surgerySelect","e","mail","pass","err","login"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,0BAAxB;AAEA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,GAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AAEA,SAASC,WAAT;AAGA,IAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,oCADG;AAEZC,EAAAA,MAAM,EAAE,MAFI;AAGZC,EAAAA,MAAM,EAAE;AAHI,CAAhB;AAKA,gBAAeC,KAAK,IAAI;AACvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACG,MAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AAEA,MAAM;AAAEqB,IAAAA;AAAF,MAAcT,KAApB;AAEA,MAAMU,QAAQ,GAAGD,OAAjB;;AAEA,MAAME,iBAAiB,GAAG,MAAM,CAE/B,CAFD;;AAIH,MAAMC,kBAAkB,GAAG,MAAM;AAChC,QAAIX,KAAK,IAAIE,QAAb,EAAuB;AACbG,MAAAA,UAAU,CAAC,iBAAD,CAAV;AACAG,MAAAA,OAAO,CAACI,IAAR,GAAeC,8BAAf,CAA8Cb,KAA9C,EAAqDE,QAArD,EACCY,IADD,CACOC,QAAD,IAAc;AAChBP,QAAAA,OAAO,CAACI,IAAR,GAAeC,8BAAf,CAA8Cb,KAA9C,EAAqDE,QAArD,EAA+Dc,KAA/D,CAAqE,UAASC,KAAT,EAAgB;AACjFZ,UAAAA,UAAU,CAACY,KAAK,CAACb,OAAP,CAAV;AACH,SAFD;AAGAhB,QAAAA,OAAO,CAAC8B,aAAR;AACH,OAND,EAOCF,KAPD,CAOOG,CAAC,IAAI;AACRd,QAAAA,UAAU,CAACc,CAAC,CAACf,OAAH,CAAV;AACH,OATD;AAUT,KAZD,MAYO;AACGC,MAAAA,UAAU,CAACV,OAAO,CAACC,OAAT,CAAV;AACT;AACE,GAhBJ;;AAiBA,SACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,YAAD;AACC,IAAA,eAAe,EAAE,IADlB;AAEC,IAAA,KAAK,EAAEwB,IAAI,IAAI;AACdnB,MAAAA,QAAQ,CAACmB,IAAD,CAAR;AACA,KAJF;AAKC,IAAA,QAAQ,EAAEC,IAAI,IAAI;AACjBlB,MAAAA,WAAW,CAACkB,IAAD,CAAX;AACY,KAPd;AAQa,IAAA,MAAM,EAAEC,GAAG,IAAIf,YAAY,CAAC,CAAC,CAAEe,GAAJ,CARxC;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAWU,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,KACOlB,OAAD,GAAYA,OAAZ,GAAsB,EAD5B,CADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMO,kBAAkB,EAAzC;AAA8C,IAAA,KAAK,EAAEhB,OAAO,CAACE,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMT,OAAO,CAACmC,KAAR,EAAvB;AAAyC,IAAA,KAAK,EAAE5B,OAAO,CAACG,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAXV,CADD;AAqBA,CApDD","sourcesContent":["import React, { useState } from 'react';\r\nimport { Actions } from \"react-native-router-flux\";\r\n\r\nimport OutterWrapper from '../components/wrapper';\r\nimport RegisterForm from '../components/emailandpassword';\r\nimport Row from '../components/row';\r\nimport Label from '../components/label';\r\nimport Button from '../components/button';\r\n\r\nimport { useDocument }  from '../hooks'\r\n\r\n\r\nconst content = {\r\n    missing: 'please fill in the required fields',\r\n    submit: 'next',\r\n    cancel: 'cancel'\r\n}\r\nexport default props => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n    const [hasErrors, setHasErrors] = useState(false);\r\n\r\n    const { service } = props;\r\n\r\n    const firebase = service;\r\n\r\n    const wrappedValidation = () => {\r\n\r\n    }\r\n\r\n\tconst submitRegistration = () => {\r\n\t\tif (email && password) {\r\n            setMessage('Registering....')\r\n            service.auth().createUserWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                service.auth().createUserWithEmailAndPassword(email, password).catch(function(error) {\r\n                    setMessage(error.message);\r\n                });\r\n                Actions.surgerySelect();\r\n            })\r\n            .catch(e => {\r\n                setMessage(e.message);\r\n            })\r\n\t\t} else {\r\n            setMessage(content.missing);\r\n\t\t}\r\n    };\r\n\treturn (\r\n\t\t<OutterWrapper>\r\n\t\t\t<RegisterForm\r\n\t\t\t\tconfirmPassword={true}\r\n\t\t\t\temail={mail => {\r\n\t\t\t\t\tsetEmail(mail);\r\n\t\t\t\t}}\r\n\t\t\t\tpassword={pass => {\r\n\t\t\t\t\tsetPassword(pass);\r\n                }}\r\n                errors={err => setHasErrors(!!(err))}\r\n\t\t\t/>\r\n            <Row>\r\n                <Label size=\"small\" position=\"center\">\r\n                    { (message) ? message : '' }\r\n                </Label>\r\n                <Button onPress={() => submitRegistration() } title={content.submit} />\r\n                <Button onPress={() => Actions.login() } title={content.cancel} />\r\n            </Row>\r\n\t\t</OutterWrapper>\r\n\t);\r\n};"]},"metadata":{},"sourceType":"module"}