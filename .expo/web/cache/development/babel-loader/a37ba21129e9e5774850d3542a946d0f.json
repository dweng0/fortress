{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\fortress\\\\node_modules\\\\react-native-tab-view\\\\src\\\\TabViewAnimated.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationStatePropType } from \"./TabViewPropTypes\";\nvar TabViewPager;\n\nswitch (Platform.OS) {\n  case 'android':\n    TabViewPager = require(\"./TabViewPagerAndroid\").default;\n    break;\n\n  case 'ios':\n    TabViewPager = require(\"./TabViewPagerScroll\").default;\n    break;\n\n  default:\n    TabViewPager = require(\"./TabViewPagerPan\").default;\n    break;\n}\n\nexport default class TabViewAnimated extends React.Component {\n  constructor(_props) {\n    super(_props);\n    this._mounted = false;\n\n    this._renderScene = props => {\n      return this.props.renderScene(props);\n    };\n\n    this._handleLayout = e => {\n      var {\n        height,\n        width\n      } = e.nativeEvent.layout;\n\n      if (this.state.layout.width === width && this.state.layout.height === height) {\n        return;\n      }\n\n      this.state.offsetX.setValue(-this.props.navigationState.index * width);\n      this.state.layoutXY.setValue({\n        x: width || 0.001,\n        y: height || 0.001\n      });\n      this.setState({\n        layout: {\n          measured: true,\n          height,\n          width\n        }\n      });\n    };\n\n    this._buildSceneRendererProps = () => ({\n      panX: this.state.panX,\n      offsetX: this.state.offsetX,\n      position: this.state.position,\n      layout: this.state.layout,\n      navigationState: this.props.navigationState,\n      jumpTo: this._jumpTo,\n      jumpToIndex: this._jumpToIndex,\n      useNativeDriver: this.props.useNativeDriver === true\n    });\n\n    this._jumpToIndex = index => {\n      var {\n        key\n      } = this.props.navigationState.routes[index];\n      console.warn('Method `jumpToIndex` is deprecated. Please upgrade your code to use `jumpTo` instead.', \"Change your code from `jumpToIndex(\".concat(index, \")` to `jumpTo('\").concat(key, \"').`\"));\n\n      this._jumpTo(key);\n    };\n\n    this._jumpTo = key => {\n      if (!this._mounted) {\n        return;\n      }\n\n      var {\n        canJumpToTab,\n        navigationState\n      } = this.props;\n      var index = navigationState.routes.findIndex(route => route.key === key);\n\n      if (!canJumpToTab(navigationState.routes[index])) {\n        return;\n      }\n\n      if (index !== navigationState.index) {\n        this.props.onIndexChange(index);\n      }\n    };\n\n    var {\n      navigationState: _navigationState\n    } = this.props;\n\n    var layout = _objectSpread({}, this.props.initialLayout, {\n      measured: false\n    });\n\n    var panX = new Animated.Value(0);\n    var offsetX = new Animated.Value(-_navigationState.index * layout.width);\n    var layoutXY = new Animated.ValueXY({\n      x: layout.width || 0.001,\n      y: layout.height || 0.001\n    });\n    var position = Animated.multiply(Animated.divide(Animated.add(panX, offsetX), layoutXY.x), -1);\n    this.state = {\n      layout,\n      layoutXY,\n      panX,\n      offsetX,\n      position\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      navigationState,\n      onIndexChange,\n      initialLayout,\n      renderScene,\n      renderPager,\n      renderHeader,\n      renderFooter\n    } = _this$props,\n        rest = _objectWithoutProperties(_this$props, [\"navigationState\", \"onIndexChange\", \"initialLayout\", \"renderScene\", \"renderPager\", \"renderHeader\", \"renderFooter\"]);\n\n    var props = this._buildSceneRendererProps();\n\n    return React.createElement(View, {\n      collapsable: false,\n      style: [styles.container, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      }\n    }, renderHeader && renderHeader(props), React.createElement(View, {\n      onLayout: this._handleLayout,\n      style: styles.pager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      }\n    }, renderPager(_objectSpread({}, props, {}, rest, {\n      panX: this.state.panX,\n      offsetX: this.state.offsetX,\n      children: navigationState.routes.map((route, index) => {\n        var scene = this._renderScene(_objectSpread({}, props, {\n          route,\n          index,\n          focused: index === navigationState.index\n        }));\n\n        if (scene) {\n          return React.cloneElement(scene, {\n            key: route.key\n          });\n        }\n\n        return scene;\n      })\n    }))), renderFooter && renderFooter(props));\n  }\n\n}\nTabViewAnimated.propTypes = {\n  navigationState: NavigationStatePropType.isRequired,\n  onIndexChange: PropTypes.func.isRequired,\n  initialLayout: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n  }),\n  canJumpToTab: PropTypes.func.isRequired,\n  renderPager: PropTypes.func.isRequired,\n  renderScene: PropTypes.func.isRequired,\n  renderHeader: PropTypes.func,\n  renderFooter: PropTypes.func\n};\nTabViewAnimated.defaultProps = {\n  canJumpToTab: () => true,\n  renderPager: props => React.createElement(TabViewPager, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    }\n  })),\n  initialLayout: {\n    height: 0,\n    width: 0\n  },\n  useNativeDriver: false\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  pager: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["G:/projects/fortress/node_modules/react-native-tab-view/src/TabViewAnimated.js"],"names":["React","PropTypes","NavigationStatePropType","TabViewPager","Platform","OS","require","default","TabViewAnimated","Component","constructor","props","_mounted","_renderScene","renderScene","_handleLayout","e","height","width","nativeEvent","layout","state","offsetX","setValue","navigationState","index","layoutXY","x","y","setState","measured","_buildSceneRendererProps","panX","position","jumpTo","_jumpTo","jumpToIndex","_jumpToIndex","useNativeDriver","key","routes","console","warn","canJumpToTab","findIndex","route","onIndexChange","initialLayout","Animated","Value","ValueXY","multiply","divide","add","componentDidMount","componentWillUnmount","render","renderPager","renderHeader","renderFooter","rest","styles","container","style","pager","children","map","scene","focused","cloneElement","propTypes","isRequired","func","shape","number","defaultProps","StyleSheet","create","flex","overflow"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Platform, View, StyleSheet } from 'react-native';\nimport { NavigationStatePropType } from './TabViewPropTypes';\nimport type {\n  Scene,\n  SceneRendererProps,\n  NavigationState,\n  Layout,\n  PagerCommonProps,\n  PagerExtraProps,\n  Style,\n} from './TabViewTypeDefinitions';\n\ntype Props<T> = PagerCommonProps<T> &\n  PagerExtraProps & {\n    navigationState: NavigationState<T>,\n    onIndexChange: (index: number) => mixed,\n    initialLayout?: Layout,\n    renderPager: (props: *) => React.Element<any>,\n    renderScene: (\n      props: SceneRendererProps<T> & Scene<T>\n    ) => ?React.Element<any>,\n    renderHeader?: (props: SceneRendererProps<T>) => ?React.Element<any>,\n    renderFooter?: (props: SceneRendererProps<T>) => ?React.Element<any>,\n    useNativeDriver?: boolean,\n    style?: Style,\n  };\n\ntype State = {|\n  layout: Layout & { measured: boolean },\n  layoutXY: Animated.ValueXY,\n  panX: Animated.Value,\n  offsetX: Animated.Value,\n  position: any,\n|};\n\nlet TabViewPager;\n\nswitch (Platform.OS) {\n  case 'android':\n    TabViewPager = require('./TabViewPagerAndroid').default;\n    break;\n  case 'ios':\n    TabViewPager = require('./TabViewPagerScroll').default;\n    break;\n  default:\n    TabViewPager = require('./TabViewPagerPan').default;\n    break;\n}\n\nexport default class TabViewAnimated<T: *> extends React.Component<\n  Props<T>,\n  State\n> {\n  static propTypes = {\n    navigationState: NavigationStatePropType.isRequired,\n    onIndexChange: PropTypes.func.isRequired,\n    initialLayout: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired,\n    }),\n    canJumpToTab: PropTypes.func.isRequired,\n    renderPager: PropTypes.func.isRequired,\n    renderScene: PropTypes.func.isRequired,\n    renderHeader: PropTypes.func,\n    renderFooter: PropTypes.func,\n  };\n\n  static defaultProps = {\n    canJumpToTab: () => true,\n    renderPager: props => <TabViewPager {...props} />,\n    initialLayout: {\n      height: 0,\n      width: 0,\n    },\n    useNativeDriver: false,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    const { navigationState } = this.props;\n    const layout = {\n      ...this.props.initialLayout,\n      measured: false,\n    };\n\n    const panX = new Animated.Value(0);\n    const offsetX = new Animated.Value(-navigationState.index * layout.width);\n    const layoutXY = new Animated.ValueXY({\n      // This is hacky, but we need to make sure that the value is never 0\n      x: layout.width || 0.001,\n      y: layout.height || 0.001,\n    });\n    const position = Animated.multiply(\n      Animated.divide(Animated.add(panX, offsetX), layoutXY.x),\n      -1\n    );\n\n    this.state = {\n      layout,\n      layoutXY,\n      panX,\n      offsetX,\n      position,\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _mounted: boolean = false;\n  _nextIndex: ?number;\n\n  _renderScene = (props: SceneRendererProps<T> & Scene<T>) => {\n    return this.props.renderScene(props);\n  };\n\n  _handleLayout = (e: any) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    this.state.offsetX.setValue(-this.props.navigationState.index * width);\n    this.state.layoutXY.setValue({\n      // This is hacky, but we need to make sure that the value is never 0\n      x: width || 0.001,\n      y: height || 0.001,\n    });\n    this.setState({\n      layout: {\n        measured: true,\n        height,\n        width,\n      },\n    });\n  };\n\n  _buildSceneRendererProps = (): SceneRendererProps<*> => ({\n    panX: this.state.panX,\n    offsetX: this.state.offsetX,\n    position: this.state.position,\n    layout: this.state.layout,\n    navigationState: this.props.navigationState,\n    jumpTo: this._jumpTo,\n    jumpToIndex: this._jumpToIndex,\n    useNativeDriver: this.props.useNativeDriver === true,\n  });\n\n  _jumpToIndex = (index: number) => {\n    const { key } = this.props.navigationState.routes[index];\n\n    console.warn(\n      'Method `jumpToIndex` is deprecated. Please upgrade your code to use `jumpTo` instead.',\n      `Change your code from \\`jumpToIndex(${index})\\` to \\`jumpTo('${key}').\\``\n    );\n\n    this._jumpTo(key);\n  };\n\n  _jumpTo = (key: string) => {\n    if (!this._mounted) {\n      // We are no longer mounted, this is a no-op\n      return;\n    }\n\n    const { canJumpToTab, navigationState } = this.props;\n    const index = navigationState.routes.findIndex(route => route.key === key);\n\n    if (!canJumpToTab(navigationState.routes[index])) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      this.props.onIndexChange(index);\n    }\n  };\n\n  render() {\n    const {\n      /* eslint-disable no-unused-vars */\n      navigationState,\n      onIndexChange,\n      initialLayout,\n      renderScene,\n      /* eslint-enable no-unused-vars */\n      renderPager,\n      renderHeader,\n      renderFooter,\n      ...rest\n    } = this.props;\n\n    const props = this._buildSceneRendererProps();\n\n    return (\n      <View collapsable={false} style={[styles.container, this.props.style]}>\n        {renderHeader && renderHeader(props)}\n        <View onLayout={this._handleLayout} style={styles.pager}>\n          {renderPager({\n            ...props,\n            ...rest,\n            panX: this.state.panX,\n            offsetX: this.state.offsetX,\n            children: navigationState.routes.map((route, index) => {\n              const scene = this._renderScene({\n                ...props,\n                route,\n                index,\n                focused: index === navigationState.index,\n              });\n\n              if (scene) {\n                return React.cloneElement(scene, { key: route.key });\n              }\n\n              return scene;\n            }),\n          })}\n        </View>\n        {renderFooter && renderFooter(props)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  pager: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}