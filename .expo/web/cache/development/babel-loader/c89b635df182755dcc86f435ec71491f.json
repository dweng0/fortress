{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\fortress\\\\node_modules\\\\react-navigation-stack\\\\dist\\\\views\\\\StackView\\\\StackViewCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Screen } from 'react-native-screens';\nimport createPointerEventsContainer from \"./createPointerEventsContainer\";\nvar EPS = 1e-5;\n\nfunction getAccessibilityProps(isActive) {\n  if (Platform.OS === 'ios') {\n    return {\n      accessibilityElementsHidden: !isActive\n    };\n  } else if (Platform.OS === 'android') {\n    return {\n      importantForAccessibility: isActive ? 'yes' : 'no-hide-descendants'\n    };\n  } else {\n    return null;\n  }\n}\n\nclass Card extends React.Component {\n  render() {\n    var {\n      children,\n      pointerEvents,\n      style,\n      position,\n      transparent,\n      scene: {\n        index,\n        isActive\n      }\n    } = this.props;\n    var active = transparent || isActive ? 1 : position.interpolate({\n      inputRange: [index, index + 1 - EPS, index + 1],\n      outputRange: [1, 1, 0],\n      extrapolate: 'clamp'\n    });\n    return React.createElement(Screen, _extends({\n      pointerEvents: pointerEvents,\n      onComponentRef: this.props.onComponentRef,\n      style: [transparent ? styles.transparent : styles.main, style],\n      active: active\n    }, getAccessibilityProps(isActive), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      }\n    }), children);\n  }\n\n}\n\nvar styles = StyleSheet.create({\n  main: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    backgroundColor: '#E9E9EF',\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 5\n  }),\n  transparent: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    backgroundColor: 'transparent'\n  })\n});\nexport default createPointerEventsContainer(Card);","map":{"version":3,"sources":["G:/projects/fortress/node_modules/react-navigation-stack/dist/views/StackView/StackViewCard.js"],"names":["React","Screen","createPointerEventsContainer","EPS","getAccessibilityProps","isActive","Platform","OS","accessibilityElementsHidden","importantForAccessibility","Card","Component","render","children","pointerEvents","style","position","transparent","scene","index","props","active","interpolate","inputRange","outputRange","extrapolate","onComponentRef","styles","main","StyleSheet","create","absoluteFillObject","backgroundColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,4BAAP;AAEA,IAAMC,GAAG,GAAG,IAAZ;;AAEA,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AACvC,MAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,WAAO;AACLC,MAAAA,2BAA2B,EAAE,CAACH;AADzB,KAAP;AAGD,GAJD,MAIO,IAAIC,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AACpC,WAAO;AACLE,MAAAA,yBAAyB,EAAEJ,QAAQ,GAAG,KAAH,GAAW;AADzC,KAAP;AAGD,GAJM,MAIA;AACL,WAAO,IAAP;AACD;AACF;;AAKD,MAAMK,IAAN,SAAmBV,KAAK,CAACW,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,QAAM;AACJC,MAAAA,QADI;AAEJC,MAAAA,aAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,WALI;AAMJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAF;AAASd,QAAAA;AAAT;AANH,QAOF,KAAKe,KAPT;AASA,QAAMC,MAAM,GAAGJ,WAAW,IAAIZ,QAAf,GAA0B,CAA1B,GAA8BW,QAAQ,CAACM,WAAT,CAAqB;AAChEC,MAAAA,UAAU,EAAE,CAACJ,KAAD,EAAQA,KAAK,GAAG,CAAR,GAAYhB,GAApB,EAAyBgB,KAAK,GAAG,CAAjC,CADoD;AAEhEK,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFmD;AAGhEC,MAAAA,WAAW,EAAE;AAHmD,KAArB,CAA7C;AAMA,WAAO,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAEX,aAAvB;AAAsC,MAAA,cAAc,EAAE,KAAKM,KAAL,CAAWM,cAAjE;AAAiF,MAAA,KAAK,EAAE,CAACT,WAAW,GAAGU,MAAM,CAACV,WAAV,GAAwBU,MAAM,CAACC,IAA3C,EAAiDb,KAAjD,CAAxF;AAAiJ,MAAA,MAAM,EAAEM;AAAzJ,OAAqKjB,qBAAqB,CAACC,QAAD,CAA1L;AAAA;AAAA;AAAA;AAAA;AAAA,QACFQ,QADE,CAAP;AAGD;;AApBgC;;AAuBnC,IAAMc,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,oBACCC,UAAU,CAACE,kBADZ;AAEFC,IAAAA,eAAe,EAAE,SAFf;AAGFC,IAAAA,WAAW,EAAE,OAHX;AAIFC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAJZ;AAKFC,IAAAA,aAAa,EAAE,GALb;AAMFC,IAAAA,YAAY,EAAE;AANZ,IAD2B;AAS/BrB,EAAAA,WAAW,oBACNY,UAAU,CAACE,kBADL;AAETC,IAAAA,eAAe,EAAE;AAFR;AAToB,CAAlB,CAAf;AAeA,eAAe9B,4BAA4B,CAACQ,IAAD,CAA3C","sourcesContent":["import React from 'react';\nimport { StyleSheet, Platform } from 'react-native';\nimport { Screen } from 'react-native-screens';\nimport createPointerEventsContainer from './createPointerEventsContainer';\n\nconst EPS = 1e-5;\n\nfunction getAccessibilityProps(isActive) {\n  if (Platform.OS === 'ios') {\n    return {\n      accessibilityElementsHidden: !isActive\n    };\n  } else if (Platform.OS === 'android') {\n    return {\n      importantForAccessibility: isActive ? 'yes' : 'no-hide-descendants'\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * Component that renders the scene as card for the <StackView />.\n */\nclass Card extends React.Component {\n  render() {\n    const {\n      children,\n      pointerEvents,\n      style,\n      position,\n      transparent,\n      scene: { index, isActive }\n    } = this.props;\n\n    const active = transparent || isActive ? 1 : position.interpolate({\n      inputRange: [index, index + 1 - EPS, index + 1],\n      outputRange: [1, 1, 0],\n      extrapolate: 'clamp'\n    });\n\n    return <Screen pointerEvents={pointerEvents} onComponentRef={this.props.onComponentRef} style={[transparent ? styles.transparent : styles.main, style]} active={active} {...getAccessibilityProps(isActive)}>\n        {children}\n      </Screen>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: '#E9E9EF',\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.2,\n    shadowRadius: 5\n  },\n  transparent: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'transparent'\n  }\n});\n\nexport default createPointerEventsContainer(Card);"]},"metadata":{},"sourceType":"module"}