{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\fortress\\\\src\\\\components\\\\button\\\\index.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center'\n  },\n  button: {\n    marginTop: 10,\n    paddingTop: 7,\n    paddingBottom: 7,\n    marginLeft: 20,\n    marginRight: 20,\n    minWidth: 300,\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    borderWidth: 4,\n    borderColor: '#000',\n    alignItems: 'center'\n  },\n  font: {\n    fontFamily: 'poppins',\n    fontSize: 32\n  }\n});\nexport var ButtonWrapper = props => {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    }\n  }, React.createElement(TouchableOpacity, _extends({\n    style: styles.button\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    }\n  }), props.children));\n};\n\nvar Button = (_ref) => {\n  var {\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\"]);\n\n  return React.createElement(ButtonWrapper, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    }\n  }), React.createElement(Text, {\n    style: styles.font,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    }\n  }, title));\n};\n\nexport default Button;","map":{"version":3,"sources":["G:/projects/fortress/src/components/button/index.js"],"names":["React","styles","StyleSheet","create","container","justifyContent","button","marginTop","paddingTop","paddingBottom","marginLeft","marginRight","minWidth","backgroundColor","borderRadius","borderWidth","borderColor","alignItems","font","fontFamily","fontSize","ButtonWrapper","props","children","Button","title"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE;AADP,GADkB;AAI7BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,SAAS,EAAC,EADN;AAEJC,IAAAA,UAAU,EAAC,CAFP;AAGJC,IAAAA,aAAa,EAAC,CAHV;AAIJC,IAAAA,UAAU,EAAC,EAJP;AAKJC,IAAAA,WAAW,EAAC,EALR;AAMJC,IAAAA,QAAQ,EAAE,GANN;AAOJC,IAAAA,eAAe,EAAC,MAPZ;AAQJC,IAAAA,YAAY,EAAC,EART;AASJC,IAAAA,WAAW,EAAE,CATT;AAUJC,IAAAA,WAAW,EAAE,MAVT;AAWJC,IAAAA,UAAU,EAAE;AAXR,GAJqB;AAiB7BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,SADV;AAEFC,IAAAA,QAAQ,EAAE;AAFR;AAjBuB,CAAlB,CAAf;AAuBA,OAAO,IAAMC,aAAa,GAAIC,KAAD,IAAW;AAEpC,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGrB,MAAM,CAACG,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAGH,MAAM,CAACK;AAAjC,KAA8CgB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,MACKA,KAAK,CAACC,QADX,CADJ,CADJ;AAOH,CATM;;AAeP,IAAMC,MAAM,GAAG,UAAyB;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AAAA,MAAZH,KAAY;;AACpC,SAAO,oBAAC,aAAD,eAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,MAA0B,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACiB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BO,KAA3B,CAA1B,CAAP;AACH,CAFD;;AAIA,eAAeD,MAAf","sourcesContent":["import React from 'react';\r\nimport { TouchableOpacity, View, StyleSheet, Text} from 'react-native';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      justifyContent: 'center',\r\n    },\r\n    button: {\r\n        marginTop:10,\r\n        paddingTop:7,\r\n        paddingBottom:7,\r\n        marginLeft:20,\r\n        marginRight:20,\r\n        minWidth: 300,\r\n        backgroundColor:'#fff',\r\n        borderRadius:15,\r\n        borderWidth: 4,\r\n        borderColor: '#000',\r\n        alignItems: 'center',\r\n    },\r\n    font: {\r\n        fontFamily: 'poppins',\r\n        fontSize: 32\r\n    }\r\n  })\r\n  \r\nexport const ButtonWrapper = (props) => {\r\n  //  console.assert(onPress, 'No on press event provided. This button wont do anything...');\r\n    return(\r\n        <View style={ styles.container }>\r\n            <TouchableOpacity style={ styles.button } {...props}>\r\n                {props.children}\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\n/**\r\n * todo navigation\r\n * @param {*} param0 \r\n */\r\nconst Button = ({ title, ...props }) => {\r\n    return <ButtonWrapper {...props}><Text style={styles.font}>{title}</Text></ButtonWrapper>\r\n}\r\n\r\nexport default Button;"]},"metadata":{},"sourceType":"module"}