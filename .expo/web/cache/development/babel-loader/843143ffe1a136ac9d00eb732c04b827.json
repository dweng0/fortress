{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\fortress\\\\node_modules\\\\react-native-router-flux\\\\src\\\\navigationStore.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { createBottomTabNavigator, createMaterialTopTabNavigator, createDrawerNavigator, createStackNavigator, NavigationActions, StackActions, DrawerActions } from 'react-navigation';\nimport { createTabNavigator as DEPRECATED_createTabNavigator, TabBarTop as DEPRECATED_TabBarTop, TabBarBottom as DEPRECATED_TabBarBottom } from 'react-navigation-deprecated-tab-navigator';\nimport PropTypes from 'prop-types';\nimport createReducer from \"./Reducer\";\nimport * as ActionConst from \"./ActionConst\";\nimport { OnEnter, OnExit, assert } from \"./Util\";\nimport { LeftButton, RightButton, BackButton } from \"./NavBar\";\nimport LightboxRenderer from \"./LightboxRenderer\";\nimport _drawerImage from \"../images/menu_burger.png\";\nimport Scene from \"./Scene\";\nimport { getActiveState, getParent, getRouteNameByKey } from \"./State\";\nimport Modal from \"./Modal\";\nimport Lightbox from \"./Lightbox\";\nimport Drawer from \"./Drawer\";\nimport Tabs from \"./Tabs\";\nimport LegacyTabs from \"./LegacyTabs\";\nimport Overlay from \"./Overlay\";\nimport OverlayRenderer from \"./OverlayRenderer\";\nimport createStackNavigatorHOC from \"./createStackNavigatorHOC\";\nimport createTabNavigatorHOC from \"./createTabNavigatorHOC\";\nvar RightNavBarButton;\nvar LeftNavBarButton;\nvar BackNavBarButton;\nvar counter = 0;\nexport var actionMap = {\n  [ActionConst.JUMP]: 'jump',\n  [ActionConst.PUSH]: 'push',\n  [ActionConst.REPLACE]: 'replace',\n  [ActionConst.BACK]: 'pop',\n  [ActionConst.BACK_ACTION]: 'pop',\n  [ActionConst.POP_TO]: 'popTo',\n  [ActionConst.REFRESH]: 'refresh',\n  [ActionConst.RESET]: 'reset',\n  [ActionConst.PUSH_OR_POP]: 'push'\n};\nvar reservedKeys = ['addRef', 'back', 'children', 'create', 'dispatch', 'drawerClose', 'drawerOpen', 'execute', 'left', 'leftButton', 'navBar', 'navigate', 'on', 'onEnter', 'onExit', 'onLeft', 'onRight', 'pop', 'popTo', 'push', 'refresh', 'refs', 'removeRef', 'renderLeftButton', 'renderRightButton', 'renderTitle', 'replace', 'right', 'rightButton', 'run', 'setParams', 'title'];\nvar dontInheritKeys = ['backToInitial', 'children', 'component', 'contentComponent', 'drawer', 'hideNavBar', 'hideTabBar', 'key', 'lightbox', 'modal', 'navigator', 'navTransparent', 'overlay', 'ref', 'style', 'tabBarComponent', 'tabs', 'title', 'type'];\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nfunction getProperties() {\n  var component = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var res = {};\n\n  for (var key of reservedKeys) {\n    if (component[key]) {\n      res[key] = component[key];\n    }\n  }\n\n  delete res.children;\n  return res;\n}\n\nfunction createTabBarOptions(_ref) {\n  var {\n    tabBarStyle,\n    activeTintColor,\n    inactiveTintColor,\n    activeBackgroundColor,\n    inactiveBackgroundColor,\n    showLabel,\n    labelStyle,\n    tabStyle\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"tabBarStyle\", \"activeTintColor\", \"inactiveTintColor\", \"activeBackgroundColor\", \"inactiveBackgroundColor\", \"showLabel\", \"labelStyle\", \"tabStyle\"]);\n\n  return _objectSpread({}, props, {\n    style: tabBarStyle,\n    activeTintColor,\n    inactiveTintColor,\n    activeBackgroundColor,\n    inactiveBackgroundColor,\n    showLabel,\n    labelStyle,\n    tabStyle\n  });\n}\n\nfunction createNavigationOptions(params) {\n  var {\n    back,\n    backButtonImage,\n    backButtonTextStyle,\n    backTitle,\n    backTitleEnabled,\n    backToInitial,\n    legacy,\n    component,\n    drawerIcon,\n    drawerImage,\n    drawerPosition,\n    getTitle,\n    headerLayoutPreset,\n    headerStyle,\n    headerTitleStyle,\n    hideDrawerButton,\n    hideNavBar,\n    hideTabBar,\n    icon,\n    init,\n    left,\n    leftButton,\n    leftButtonImage,\n    leftButtonTextStyle,\n    leftTitle,\n    navBar,\n    navBarButtonColor,\n    navigationBarStyle,\n    navigationBarTitleImage,\n    navigationBarTitleImageStyle,\n    navTransparent,\n    onLeft,\n    onRight,\n    panHandlers,\n    renderBackButton,\n    renderNavigationBar,\n    renderTitle,\n    right,\n    rightButton,\n    rightButtonImage,\n    rightButtonTextStyle,\n    rightTitle,\n    tabBarIcon,\n    tabBarLabel,\n    title,\n    titleStyle\n  } = params,\n      props = _objectWithoutProperties(params, [\"back\", \"backButtonImage\", \"backButtonTextStyle\", \"backTitle\", \"backTitleEnabled\", \"backToInitial\", \"legacy\", \"component\", \"drawerIcon\", \"drawerImage\", \"drawerPosition\", \"getTitle\", \"headerLayoutPreset\", \"headerStyle\", \"headerTitleStyle\", \"hideDrawerButton\", \"hideNavBar\", \"hideTabBar\", \"icon\", \"init\", \"left\", \"leftButton\", \"leftButtonImage\", \"leftButtonTextStyle\", \"leftTitle\", \"navBar\", \"navBarButtonColor\", \"navigationBarStyle\", \"navigationBarTitleImage\", \"navigationBarTitleImageStyle\", \"navTransparent\", \"onLeft\", \"onRight\", \"panHandlers\", \"renderBackButton\", \"renderNavigationBar\", \"renderTitle\", \"right\", \"rightButton\", \"rightButtonImage\", \"rightButtonTextStyle\", \"rightTitle\", \"tabBarIcon\", \"tabBarLabel\", \"title\", \"titleStyle\"]);\n\n  var NavBar = renderNavigationBar || navBar;\n\n  if (component && component.navigationOptions) {\n    return component.navigationOptions;\n  }\n\n  return (_ref2) => {\n    var {\n      navigation,\n      screenProps\n    } = _ref2;\n    var navigationParams = navigation.state.params || {};\n\n    var state = _objectSpread({\n      navigation\n    }, params, {}, navigationParams, {}, screenProps);\n\n    var res = _objectSpread({}, props, {\n      headerBackImage: navigationParams.backButtonImage || backButtonImage,\n      headerBackTitle: getValue(navigationParams.backTitle || backTitle, state),\n      headerBackTitleEnabled: navigationParams.backTitleEnabled || backTitleEnabled,\n      headerLayoutPreset: navigationParams.headerLayoutPreset || headerLayoutPreset,\n      headerLeft: getValue(navigationParams.left || left || leftButton || params.renderLeftButton, state),\n      headerRight: getValue(navigationParams.right || right || rightButton || params.renderRightButton, state),\n      headerStyle: getValue(navigationParams.headerStyle || headerStyle || navigationBarStyle, state),\n      headerTintColor: navBarButtonColor || props.tintColor || navigationParams.tintColor || navigationParams.headerTintColor,\n      headerTitle: getValue(navigationParams.renderTitle || renderTitle || params.renderTitle, state),\n      headerTitleStyle: headerTitleStyle || titleStyle,\n      title: getValue(navigationParams.title || title || getTitle, state)\n    });\n\n    var NavBarFromParams = navigationParams.renderNavigationBar || navigationParams.navBar;\n\n    if (NavBarFromParams != null) {\n      if (NavBarFromParams) {\n        res.header = data => React.createElement(NavBarFromParams, _extends({\n          navigation: navigation\n        }, state, data, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          }\n        }));\n      }\n    } else if (NavBar) {\n      res.header = data => React.createElement(NavBar, _extends({\n        navigation: navigation\n      }, state, data, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        }\n      }));\n    }\n\n    if (typeof navigationParams.panHandlers !== 'undefined') {\n      if (navigationParams.panHandlers === null) {\n        res.gesturesEnabled = false;\n      }\n    } else if (panHandlers === null) {\n      res.gesturesEnabled = false;\n    }\n\n    if (navigationBarTitleImage) {\n      res.headerTitle = React.createElement(Image, {\n        source: navigationBarTitleImage,\n        style: navigationBarTitleImageStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        }\n      });\n    }\n\n    if (tabBarLabel) {\n      res.tabBarLabel = tabBarLabel;\n    }\n\n    if (tabBarIcon || icon) {\n      var Icon = tabBarIcon || icon;\n\n      res.tabBarIcon = data => React.createElement(Icon, _extends({}, state, data, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        }\n      }));\n    }\n\n    var componentData = {};\n\n    if (component) {\n      for (var key of ['onRight', 'onLeft', 'rightButton', 'leftButton', 'leftTitle', 'rightTitle', 'rightButtonImage', 'leftButtonImage', 'rightButtonTextStyle', 'leftButtonTextStyle', 'rightButtonIconStyle', 'leftButtonIconStyle', 'leftButtonTintColor', 'rightButtonTintColor']) {\n        if (component[key]) {\n          componentData[key] = component[key];\n        }\n      }\n    }\n\n    if (rightButtonImage || rightTitle || params.renderRightButton || onRight || navigationParams.onRight || navigationParams.rightTitle || navigationParams.rightButtonImage || rightButtonTextStyle || (drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition === 'right') {\n      res.headerRight = getValue(navigationParams.right || navigationParams.rightButton || params.renderRightButton, _objectSpread({}, navigationParams, {}, screenProps)) || React.createElement(RightNavBarButton, _extends({\n        navigation: navigation\n      }, params, navigationParams, componentData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        }\n      }));\n    }\n\n    if (leftButtonImage || backButtonImage || backTitle || leftTitle || params.renderLeftButton || leftButtonTextStyle || renderBackButton || backButtonTextStyle || onLeft || navigationParams.leftTitle || navigationParams.onLeft || navigationParams.leftButtonImage || navigationParams.backButtonImage || navigationParams.backTitle || (drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition !== 'right') {\n      var _leftButton = navigationParams.left || navigationParams.leftButton || params.renderLeftButton;\n\n      res.headerLeft = getValue(_leftButton, _objectSpread({}, params, {}, navigationParams, {}, screenProps)) || (onLeft && (leftTitle || navigationParams.leftTitle || leftButtonImage || navigationParams.leftButtonImage) || drawerImage || drawerIcon) && React.createElement(LeftNavBarButton, _extends({\n        navigation: navigation\n      }, params, navigationParams, componentData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        }\n      })) || res.headerLeft || (init ? null : !_leftButton && renderBackButton && renderBackButton(state) || !_leftButton && React.createElement(BackNavBarButton, _extends({\n        navigation: navigation\n      }, state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        }\n      }))) || null;\n    }\n\n    if (back) {\n      res.headerLeft = renderBackButton && renderBackButton(state) || React.createElement(BackNavBarButton, _extends({\n        navigation: navigation\n      }, state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        }\n      }));\n    }\n\n    if (typeof navigationParams.left !== 'undefined' || typeof navigationParams.leftButton !== 'undefined' || typeof navigationParams.renderLeftButton !== 'undefined') {\n      if (navigationParams.left === null || navigationParams.leftButton === null || navigationParams.renderLeftButton === null) {\n        res.headerLeft = null;\n      }\n    }\n\n    var routeParams = navigation.state.routes && navigation.state.routes[navigation.state.index].params;\n\n    if (navigationParams.hideTabBar != null) {\n      if (navigationParams.hideTabBar) {\n        res.tabBarVisible = false;\n      }\n    } else if (hideTabBar) {\n      res.tabBarVisible = false;\n    } else if (routeParams && routeParams.hideTabBar) {\n      res.tabBarVisible = false;\n    }\n\n    if (navigationParams.hideNavBar != null) {\n      if (navigationParams.hideNavBar) {\n        res.header = null;\n      }\n    } else if (hideNavBar) {\n      res.header = null;\n    }\n\n    if (navTransparent) {\n      res.headerTransparent = true;\n      res.headerStyle = {\n        marginTop: StatusBar.currentHeight\n      };\n    }\n\n    if (!legacy && backToInitial) {\n      var userDefinedTabBarOnPress = res.tabBarOnPress;\n\n      res.tabBarOnPress = data => {\n        if (userDefinedTabBarOnPress) {\n          console.warn('backToInitial and tabBarOnPress were both defined and might cause unexpected navigation behaviors. I hope you know what you are doing ;-)');\n          userDefinedTabBarOnPress(data);\n        }\n\n        if (data.navigation && data.navigation.state.index !== 0) {\n          data.navigation.dispatch(StackActions.popToTop());\n        } else {\n          data.defaultHandler();\n        }\n      };\n    }\n\n    return res;\n  };\n}\n\nfunction originalRouteName(routeName) {\n  if (routeName.startsWith('_')) {\n    return routeName.substring(1);\n  }\n\n  return routeName;\n}\n\nfunction isStatelessComponent(Component) {\n  return !Component.prototype || typeof Component.prototype.render !== 'function';\n}\n\nfunction extendProps(props, store) {\n  if (!props) {\n    return {};\n  }\n\n  var res = _objectSpread({}, props);\n\n  var _loop = function _loop(transition) {\n    if (reservedKeys.indexOf(transition) === -1 && transition.startsWith('on') && transition.charAt(2) >= 'A' && transition.charAt(2) <= 'Z' && typeof props[transition] === 'string') {\n      if (store[props[transition]]) {\n        res[transition] = params => store[props[transition]](params);\n      }\n    }\n  };\n\n  for (var transition of Object.keys(props)) {\n    _loop(transition);\n  }\n\n  return res;\n}\n\nfunction createWrapper(Component, wrapBy, store) {\n  if (!Component) {\n    return null;\n  }\n\n  var wrapper = wrapBy || (props => props);\n\n  if (!isStatelessComponent(Component)) {\n    class Wrapped extends React.Component {\n      constructor() {\n        super();\n        this.onRef = this.onRef.bind(this);\n      }\n\n      componentDidMount() {\n        var {\n          navigation\n        } = this.props;\n\n        if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n          store.addRef(originalRouteName(navigation.state.routeName), this.ref);\n        }\n\n        if (this.ref && this.ref.onEnter) {\n          this.ref.onEnter(navigation && navigation.state);\n        }\n      }\n\n      componentWillUnmount() {\n        var {\n          navigation\n        } = this.props;\n\n        if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n          store.deleteRef(originalRouteName(navigation.state.routeName));\n        }\n\n        if (this.ref && this.ref.onExit) {\n          this.ref.onExit(navigation && navigation.state);\n        }\n\n        this.ref = null;\n      }\n\n      onRef(ref) {\n        this.ref = ref;\n      }\n\n      render() {\n        var {\n          navigation\n        } = this.props;\n\n        if (!navigation || !navigation.state) {\n          return React.createElement(Component, _extends({\n            ref: this.onRef\n          }, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 446\n            }\n          }));\n        }\n\n        return React.createElement(Component, _extends({\n          ref: this.onRef\n        }, this.props, extendProps(navigation.state.params, store), {\n          name: navigation.state.routeName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448\n          }\n        }));\n      }\n\n    }\n\n    Wrapped.propTypes = {\n      navigation: PropTypes.shape().isRequired\n    };\n    return wrapper(Wrapped);\n  }\n\n  function StatelessWrapped(_ref3) {\n    var {\n      navigation\n    } = _ref3,\n        props = _objectWithoutProperties(_ref3, [\"navigation\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      navigation: navigation\n    }, extendProps(navigation.state.params, store), {\n      name: navigation.state.routeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      }\n    }));\n  }\n\n  StatelessWrapped.propTypes = {\n    navigation: PropTypes.shape().isRequired\n  };\n  return wrapper(StatelessWrapped);\n}\n\nfunction filterParam() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (data.toString() !== '[object Object]') {\n    return {\n      data\n    };\n  }\n\n  var proto = (data || {}).constructor.name;\n\n  if (!data || proto !== 'Object') {\n    return {};\n  }\n\n  return data;\n}\n\nfunction uniteParams(routeName, params) {\n  var res = {};\n\n  for (var param of params) {\n    if (param) {\n      res = _objectSpread({}, res, {}, filterParam(param));\n    }\n  }\n\n  res.routeName = routeName;\n  return res;\n}\n\nvar defaultSuccess = () => {};\n\nvar defaultFailure = () => {};\n\nclass NavigationStore {\n  constructor() {\n    var _this = this;\n\n    this.getStateForAction = null;\n    this.reducer = null;\n    this._navigator = null;\n    this.externalDispatch = null;\n    this.externalState = null;\n    this.prevState = null;\n    this.externalAction = {};\n    this.refs = {};\n    this.states = {};\n\n    this.setCustomReducer = Navigator => {\n      this.getStateForAction = Navigator.router.getStateForAction;\n      var reducer = createReducer();\n\n      Navigator.router.getStateForAction = (cmd, state) => this.reducer ? this.reducer(state, cmd) : reducer(state, cmd);\n    };\n\n    this.onEnterHandler = function () {\n      var _ref4 = _asyncToGenerator(function* (currentScene) {\n        if (_this.states[currentScene]) {\n          var handler = _this[currentScene + OnEnter];\n          var success = _this.states[currentScene].success || defaultSuccess;\n          var failure = _this.states[currentScene].failure || defaultFailure;\n\n          if (handler) {\n            try {\n              var res = yield handler(_this.currentParams, _this.state);\n\n              if (res) {\n                success(res);\n              } else {\n                failure();\n              }\n            } catch (e) {\n              failure({\n                error: e.message\n              });\n            }\n          }\n        }\n      });\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    this.onExitHandler = prevScene => {\n      if (prevScene) {\n        var exitHandler = this[prevScene + OnExit];\n\n        if (exitHandler) {\n          try {\n            var res = exitHandler(this.state);\n\n            if (res instanceof Promise) {\n              res.then(defaultSuccess, defaultFailure);\n            }\n          } catch (e) {\n            console.error('Error during onExit handler:', e);\n          }\n        }\n      }\n    };\n\n    this.onNavigationStateChange = function () {\n      var _ref5 = _asyncToGenerator(function* (prevState, currentState, action) {\n        _this.state = currentState;\n        _this.prevState = prevState;\n        var activeState = getActiveState(_this.state);\n        var currentScene = activeState.routeName;\n        _this.currentParams = _objectSpread({}, activeState.params, {}, action.params);\n        _this.currentScene = currentScene;\n        _this.prevScene = _this.prevState ? getActiveState(_this.prevState).routeName : null;\n\n        if (_this.currentScene !== _this.prevScene) {\n          _this.onExitHandler(_this.prevScene);\n\n          setTimeout(() => _this.dispatch({\n            type: ActionConst.FOCUS,\n            routeName: _this.currentScene,\n            params: _this.currentParams\n          }));\n\n          _this.onEnterHandler(currentScene);\n        } else {\n          var routeName = getRouteNameByKey(_this.state, action.key);\n\n          if (action.type === 'Navigation/DRAWER_OPENED') {\n            _this.onEnterHandler(routeName);\n          } else if (action.type === 'Navigation/DRAWER_CLOSED') {\n            _this.onExitHandler(routeName);\n          }\n        }\n\n        if (_this.onStateChange) {\n          _this.onStateChange(prevState, currentState, action);\n        }\n      });\n\n      return function (_x2, _x3, _x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    this.setTopLevelNavigator = navigatorRef => {\n      this._navigator = navigatorRef;\n    };\n\n    this.addRef = (name, ref) => {\n      this.refs[name] = ref;\n    };\n\n    this.deleteRef = name => {\n      delete this.refs[name];\n    };\n\n    this.create = function (scene) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var wrapBy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : props => props;\n      assert(!Array.isArray(scene), 'Router should contain only one scene, please wrap your scenes with root Scene ');\n      RightNavBarButton = wrapBy(RightButton);\n      LeftNavBarButton = wrapBy(LeftButton);\n      BackNavBarButton = wrapBy(BackButton);\n\n      var Navigator = _this.processScene(scene, params, [], wrapBy);\n\n      _this.onNavigationStateChange(null, Navigator.router.getStateForAction(NavigationActions.init()), NavigationActions.init());\n\n      _this.setCustomReducer(Navigator);\n\n      return Navigator;\n    };\n\n    this.processScene = function (scene) {\n      var inheritProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var clones = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var wrapBy = arguments.length > 3 ? arguments[3] : undefined;\n      assert(scene.props, 'props should be defined');\n\n      if (!scene.props.children) {\n        return null;\n      }\n\n      var res = {};\n      var order = [];\n\n      var _scene$props = scene.props,\n          {\n        navigator,\n        renderer,\n        contentComponent,\n        drawerWidth,\n        drawerLockMode,\n        tabBarPosition,\n        lazy,\n        duration\n      } = _scene$props,\n          parentProps = _objectWithoutProperties(_scene$props, [\"navigator\", \"renderer\", \"contentComponent\", \"drawerWidth\", \"drawerLockMode\", \"tabBarPosition\", \"lazy\", \"duration\"]);\n\n      var {\n        legacy,\n        tabs,\n        modal,\n        lightbox,\n        overlay,\n        drawer,\n        transitionConfig,\n        tabBarComponent\n      } = parentProps;\n\n      if (scene.type === Modal) {\n        modal = true;\n      } else if (scene.type === Drawer) {\n        drawer = true;\n      } else if (scene.type === Lightbox) {\n        lightbox = true;\n      } else if (scene.type === Tabs) {\n        tabs = true;\n      } else if (scene.type === LegacyTabs) {\n        tabs = true;\n        legacy = true;\n      } else if (scene.type === Overlay) {\n        overlay = true;\n      }\n\n      if (duration !== undefined && !transitionConfig) {\n        transitionConfig = () => ({\n          transitionSpec: {\n            duration,\n            timing: Animated.timing,\n            easing: Easing.step0\n          }\n        });\n      }\n\n      var commonProps = _objectSpread({}, inheritProps, {}, parentProps);\n\n      delete commonProps.children;\n      delete commonProps.component;\n\n      for (var pkey of Object.keys(commonProps)) {\n        if (dontInheritKeys.includes(pkey) && (pkey === 'type' || pkey === 'hideNavBar' || !parentProps[pkey])) {\n          delete commonProps[pkey];\n        }\n      }\n\n      if (drawer) {\n        commonProps.drawerImage = commonProps.drawerImage || _drawerImage;\n      }\n\n      var children = !Array.isArray(parentProps.children) ? [parentProps.children] : [].concat(...parentProps.children);\n\n      if (!drawer && !tabs && !overlay) {\n        children.push(...clones);\n      }\n\n      for (var child of children) {\n        if (child && child.props.clone) {\n          if (clones.indexOf(child) === -1) {\n            clones.push(child);\n          }\n        }\n      }\n\n      var initialRouteName;\n      var initialRouteParams;\n\n      var _loop2 = function _loop2(_child) {\n        if (!_child) {\n          return \"continue\";\n        }\n\n        var key = _child.key || \"key\".concat(counter += 1);\n        var init = key === children[0].key;\n        assert(reservedKeys.indexOf(key) === -1, \"Scene name cannot be reserved word: \".concat(_child.key));\n\n        var _child$props = _child.props,\n            {\n          component,\n          type = tabs || drawer ? 'jump' : 'push',\n          path,\n          onEnter,\n          onExit,\n          on,\n          failure,\n          success,\n          wrap,\n          initial = false\n        } = _child$props,\n            props = _objectWithoutProperties(_child$props, [\"component\", \"type\", \"path\", \"onEnter\", \"onExit\", \"on\", \"failure\", \"success\", \"wrap\", \"initial\"]);\n\n        if (!_this.states[key]) {\n          _this.states[key] = {};\n        }\n\n        for (var transition of Object.keys(props)) {\n          if (reservedKeys.indexOf(transition) === -1 && props[transition] instanceof Function) {\n            _this.states[key][transition] = props[transition];\n          }\n        }\n\n        delete props.children;\n\n        if (success) {\n          _this.states[key].success = success instanceof Function ? success : args => {\n            _this[success](args);\n          };\n        }\n\n        if (failure) {\n          _this.states[key].failure = failure instanceof Function ? failure : args => {\n            _this[failure](args);\n          };\n        }\n\n        if (path) {\n          _this.states[key].path = path;\n        }\n\n        var screen = {\n          screen: createWrapper(component, wrapBy, _this) || _this.processScene(_child, commonProps, clones) || lightbox && (() => null),\n          navigationOptions: createNavigationOptions(_objectSpread({}, commonProps, {\n            hideNavBar: parentProps.hideNavBar\n          }, getProperties(component), {}, _child.props, {\n            init,\n            component\n          }))\n        };\n        var wrapNavBar = drawer || tabs && !navigator && !renderer || wrap;\n\n        if (wrap === false || commonProps.wrap === false) {\n          wrapNavBar = false;\n        }\n\n        if (component && wrapNavBar) {\n          res[key] = {\n            screen: _this.processScene({\n              key,\n              props: {\n                children: {\n                  key: \"_\".concat(key),\n                  props: _objectSpread({}, _child.props, {\n                    wrap: false\n                  })\n                }\n              }\n            }, commonProps, clones, wrapBy),\n            navigationOptions: createNavigationOptions(_objectSpread({}, commonProps, {}, _child.props, {\n              hideNavBar: true\n            }))\n          };\n        } else {\n          res[key] = screen;\n        }\n\n        props.init = true;\n\n        if (!_this[key]) {\n          _this[key] = new Function('actions', 'props', 'type', \"return function \".concat(key.replace(/\\W/g, '_'), \"(params){ actions.execute(type, '\").concat(key, \"', props, params)}\"))(_this, _objectSpread({\n            error: ''\n          }, commonProps, {}, props), type);\n        }\n\n        if ((onEnter || on || component && component.onEnter) && !_this[key + OnEnter]) {\n          _this[key + OnEnter] = onEnter || on || component.onEnter;\n        }\n\n        if ((onExit || component && component.onExit) && !_this[key + OnExit]) {\n          _this[key + OnExit] = onExit || component.onExit;\n        }\n\n        order.push(key);\n\n        if (initial || _child.props.initial || !initialRouteName) {\n          initialRouteName = key;\n          initialRouteParams = _objectSpread({}, commonProps, {}, props);\n        }\n      };\n\n      for (var _child of children) {\n        var _ret = _loop2(_child);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      var mode = modal ? 'modal' : 'card';\n\n      var navigationConfig = _objectSpread({\n        lazy,\n        initialRouteName,\n        initialRouteParams,\n        contentComponent,\n        order\n      }, commonProps, {\n        navigationOptions: createNavigationOptions(commonProps)\n      });\n\n      if (navigator) {\n        return navigator(res, navigationConfig);\n      }\n\n      if (renderer) {\n        return tabs ? createTabNavigatorHOC(renderer)(res, navigationConfig) : createStackNavigatorHOC(renderer)(res, navigationConfig);\n      }\n\n      if (lightbox) {\n        return createStackNavigatorHOC(LightboxRenderer)(res, _objectSpread({\n          mode,\n          initialRouteParams,\n          initialRouteName\n        }, commonProps, {\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n\n      if (tabs) {\n        var createTabNavigator = createMaterialTopTabNavigator;\n\n        if (legacy) {\n          createTabNavigator = DEPRECATED_createTabNavigator;\n\n          if (!tabBarComponent) {\n            tabBarComponent = tabBarPosition === 'top' ? props => React.createElement(DEPRECATED_TabBarTop, _extends({}, props, commonProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 830\n              }\n            })) : props => React.createElement(DEPRECATED_TabBarBottom, _extends({}, props, commonProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 830\n              }\n            }));\n          }\n        } else if (tabBarPosition !== 'top') {\n          createTabNavigator = createBottomTabNavigator;\n        }\n\n        return createTabNavigator(res, _objectSpread({\n          lazy,\n          tabBarComponent,\n          initialRouteName,\n          initialRouteParams,\n          tabBarPosition,\n          order\n        }, commonProps, {\n          tabBarOptions: createTabBarOptions(commonProps),\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n\n      if (drawer) {\n        var config = _objectSpread({\n          initialRouteName,\n          contentComponent,\n          order,\n          drawerOpenRoute: 'DrawerOpen',\n          drawerCloseRoute: 'DrawerClose',\n          drawerToggleRoute: 'DrawerToggle'\n        }, commonProps);\n\n        if (drawerWidth) {\n          config.drawerWidth = drawerWidth;\n        }\n\n        if (drawerLockMode) {\n          config.drawerLockMode = drawerLockMode;\n        }\n\n        return createDrawerNavigator(res, config);\n      }\n\n      if (overlay) {\n        return createTabNavigatorHOC(OverlayRenderer)(res, _objectSpread({\n          lazy,\n          initialRouteName,\n          contentComponent,\n          initialRouteParams,\n          order\n        }, commonProps, {\n          tabBarOptions: createTabBarOptions(commonProps),\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n\n      return createStackNavigator(res, _objectSpread({\n        mode,\n        initialRouteParams,\n        initialRouteName\n      }, commonProps, {\n        transitionConfig,\n        navigationOptions: createNavigationOptions(commonProps)\n      }));\n    };\n\n    this.dispatch = action => {\n      if (this.externalDispatch) {\n        this.externalAction = action;\n        this.externalDispatch(action);\n      } else if (this._navigator) {\n        this._navigator.dispatch(action);\n      }\n    };\n\n    this.execute = function (actionType, routeName) {\n      for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        params[_key - 2] = arguments[_key];\n      }\n\n      var res = uniteParams(routeName, params);\n      var overridenType = res.type || actionType;\n      var type = actionMap[overridenType] || overridenType;\n\n      if (type === 'pop') {\n        _this[type](res);\n      } else {\n        _this[type](routeName, res);\n      }\n    };\n\n    this.push = (routeName, data) => {\n      var params = filterParam(data);\n      this.dispatch({\n        type: StackActions.PUSH,\n        routeName,\n        params\n      });\n    };\n\n    this.jump = (routeName, data) => {\n      var params = filterParam(data);\n      this.dispatch({\n        type: NavigationActions.NAVIGATE,\n        routeName,\n        params\n      });\n    };\n\n    this.drawerOpen = () => {\n      this.dispatch(DrawerActions.openDrawer());\n    };\n\n    this.drawerClose = () => {\n      this.dispatch(DrawerActions.closeDrawer());\n    };\n\n    this.drawerToggle = () => {\n      this.dispatch(DrawerActions.toggleDrawer());\n    };\n\n    this.refresh = function (data) {\n      var sceneKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var params = filterParam(data);\n      var {\n        key\n      } = getActiveState(_this.state);\n\n      _this.dispatch(NavigationActions.setParams({\n        key: sceneKey || key,\n        params\n      }));\n    };\n\n    this.pop = function () {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          {\n        timeout,\n        key\n      } = _ref6,\n          params = _objectWithoutProperties(_ref6, [\"timeout\", \"key\"]);\n\n      var res = filterParam(params);\n\n      if (timeout) {\n        setTimeout(() => _this.pop(params), timeout);\n      } else {\n        _this.dispatch(NavigationActions.back({\n          key\n        }));\n\n        if (res.refresh) {\n          _this.refresh(res.refresh);\n        }\n      }\n\n      return true;\n    };\n\n    this.popTo = (routeName, data) => {\n      var params = filterParam(data);\n      this.dispatch({\n        type: ActionConst.POP_TO,\n        routeName,\n        params\n      });\n    };\n\n    this.popAndPush = (routeName, data) => {\n      var params = filterParam(data);\n      this.dispatch({\n        type: ActionConst.POP_AND_PUSH,\n        routeName,\n        params\n      });\n    };\n\n    this.replace = (routeName, data) => {\n      var params = filterParam(data);\n      this.dispatch({\n        type: ActionConst.REPLACE,\n        routeName,\n        params\n      });\n    };\n\n    this.reset = (routeName, data) => {\n      var params = filterParam(data);\n      var parent = getParent(this.state, routeName);\n      this.dispatch(StackActions.reset({\n        index: 0,\n        key: parent ? parent.key : null,\n        actions: [NavigationActions.navigate({\n          routeName,\n          params\n        })]\n      }));\n    };\n  }\n\n  set externalState(state) {\n    if (state && this.externalDispatch) {\n      this.onNavigationStateChange(this.state, state, this.externalAction);\n      this.state = state;\n    }\n  }\n\n}\n\nexport default new NavigationStore();","map":{"version":3,"sources":["G:/projects/fortress/node_modules/react-native-router-flux/src/navigationStore.js"],"names":["React","createBottomTabNavigator","createMaterialTopTabNavigator","createDrawerNavigator","createStackNavigator","NavigationActions","StackActions","DrawerActions","createTabNavigator","DEPRECATED_createTabNavigator","TabBarTop","DEPRECATED_TabBarTop","TabBarBottom","DEPRECATED_TabBarBottom","PropTypes","createReducer","ActionConst","OnEnter","OnExit","assert","LeftButton","RightButton","BackButton","LightboxRenderer","_drawerImage","Scene","getActiveState","getParent","getRouteNameByKey","Modal","Lightbox","Drawer","Tabs","LegacyTabs","Overlay","OverlayRenderer","createStackNavigatorHOC","createTabNavigatorHOC","RightNavBarButton","LeftNavBarButton","BackNavBarButton","counter","actionMap","JUMP","PUSH","REPLACE","BACK","BACK_ACTION","POP_TO","REFRESH","RESET","PUSH_OR_POP","reservedKeys","dontInheritKeys","getValue","value","params","Function","getProperties","component","res","key","children","createTabBarOptions","tabBarStyle","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","labelStyle","tabStyle","props","style","createNavigationOptions","back","backButtonImage","backButtonTextStyle","backTitle","backTitleEnabled","backToInitial","legacy","drawerIcon","drawerImage","drawerPosition","getTitle","headerLayoutPreset","headerStyle","headerTitleStyle","hideDrawerButton","hideNavBar","hideTabBar","icon","init","left","leftButton","leftButtonImage","leftButtonTextStyle","leftTitle","navBar","navBarButtonColor","navigationBarStyle","navigationBarTitleImage","navigationBarTitleImageStyle","navTransparent","onLeft","onRight","panHandlers","renderBackButton","renderNavigationBar","renderTitle","right","rightButton","rightButtonImage","rightButtonTextStyle","rightTitle","tabBarIcon","tabBarLabel","title","titleStyle","NavBar","navigationOptions","navigation","screenProps","navigationParams","state","headerBackImage","headerBackTitle","headerBackTitleEnabled","headerLeft","renderLeftButton","headerRight","renderRightButton","headerTintColor","tintColor","headerTitle","NavBarFromParams","header","data","gesturesEnabled","Icon","componentData","routeParams","routes","index","tabBarVisible","headerTransparent","marginTop","StatusBar","currentHeight","userDefinedTabBarOnPress","tabBarOnPress","console","warn","dispatch","popToTop","defaultHandler","originalRouteName","routeName","startsWith","substring","isStatelessComponent","Component","prototype","render","extendProps","store","transition","indexOf","charAt","Object","keys","createWrapper","wrapBy","wrapper","Wrapped","constructor","onRef","bind","componentDidMount","ref","addRef","onEnter","componentWillUnmount","deleteRef","onExit","propTypes","shape","isRequired","StatelessWrapped","filterParam","toString","proto","name","uniteParams","param","defaultSuccess","defaultFailure","NavigationStore","getStateForAction","reducer","_navigator","externalDispatch","externalState","prevState","externalAction","refs","states","setCustomReducer","Navigator","router","cmd","onEnterHandler","currentScene","handler","success","failure","currentParams","e","error","message","onExitHandler","prevScene","exitHandler","Promise","then","onNavigationStateChange","currentState","action","activeState","setTimeout","type","FOCUS","onStateChange","setTopLevelNavigator","navigatorRef","create","scene","Array","isArray","processScene","inheritProps","clones","order","navigator","renderer","contentComponent","drawerWidth","drawerLockMode","tabBarPosition","lazy","duration","parentProps","tabs","modal","lightbox","overlay","drawer","transitionConfig","tabBarComponent","undefined","transitionSpec","timing","Animated","easing","Easing","step0","commonProps","pkey","includes","concat","push","child","clone","initialRouteName","initialRouteParams","path","on","wrap","initial","args","screen","wrapNavBar","replace","mode","navigationConfig","tabBarOptions","config","drawerOpenRoute","drawerCloseRoute","drawerToggleRoute","execute","actionType","overridenType","jump","NAVIGATE","drawerOpen","openDrawer","drawerClose","closeDrawer","drawerToggle","toggleDrawer","refresh","sceneKey","setParams","pop","timeout","popTo","popAndPush","POP_AND_PUSH","reset","parent","actions","navigate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  StatusBar, Image, Animated, Easing,\n} from 'react-native';\nimport {\n  createBottomTabNavigator,\n  createMaterialTopTabNavigator,\n  createDrawerNavigator,\n  createStackNavigator,\n  NavigationActions,\n  StackActions,\n  DrawerActions,\n} from 'react-navigation';\nimport {\n  createTabNavigator as DEPRECATED_createTabNavigator,\n  TabBarTop as DEPRECATED_TabBarTop,\n  TabBarBottom as DEPRECATED_TabBarBottom,\n} from 'react-navigation-deprecated-tab-navigator';\nimport PropTypes from 'prop-types';\nimport createReducer from './Reducer';\nimport * as ActionConst from './ActionConst';\nimport { OnEnter, OnExit, assert } from './Util';\nimport { LeftButton, RightButton, BackButton } from './NavBar';\nimport LightboxRenderer from './LightboxRenderer';\nimport _drawerImage from '../images/menu_burger.png';\nimport Scene from './Scene';\nimport { getActiveState, getParent, getRouteNameByKey } from './State';\nimport Modal from './Modal';\nimport Lightbox from './Lightbox';\nimport Drawer from './Drawer';\nimport Tabs from './Tabs';\nimport LegacyTabs from './LegacyTabs';\nimport Overlay from './Overlay';\nimport OverlayRenderer from './OverlayRenderer';\nimport createStackNavigatorHOC from './createStackNavigatorHOC';\nimport createTabNavigatorHOC from './createTabNavigatorHOC';\n\nlet RightNavBarButton;\nlet LeftNavBarButton;\nlet BackNavBarButton;\nlet counter = 0;\n\nexport const actionMap = {\n  [ActionConst.JUMP]: 'jump',\n  [ActionConst.PUSH]: 'push',\n  [ActionConst.REPLACE]: 'replace',\n  [ActionConst.BACK]: 'pop',\n  [ActionConst.BACK_ACTION]: 'pop',\n  [ActionConst.POP_TO]: 'popTo',\n  [ActionConst.REFRESH]: 'refresh',\n  [ActionConst.RESET]: 'reset',\n  [ActionConst.PUSH_OR_POP]: 'push',\n};\n\nconst reservedKeys = [\n  'addRef',\n  'back',\n  'children',\n  'create',\n  'dispatch',\n  'drawerClose',\n  'drawerOpen',\n  'execute',\n  'left',\n  'leftButton',\n  'navBar',\n  'navigate',\n  'on',\n  'onEnter',\n  'onExit',\n  'onLeft',\n  'onRight',\n  'pop',\n  'popTo',\n  'push',\n  'refresh',\n  'refs',\n  'removeRef',\n  'renderLeftButton',\n  'renderRightButton',\n  'renderTitle',\n  'replace',\n  'right',\n  'rightButton',\n  'run',\n  'setParams',\n  'title',\n];\n\nconst dontInheritKeys = [\n  'backToInitial',\n  'children',\n  'component',\n  'contentComponent',\n  'drawer',\n  'hideNavBar',\n  'hideTabBar',\n  'key',\n  'lightbox',\n  'modal',\n  'navigator',\n  'navTransparent',\n  'overlay',\n  'ref',\n  'style',\n  'tabBarComponent',\n  'tabs',\n  'title',\n  'type',\n];\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nfunction getProperties(component = {}) {\n  const res = {};\n  for (const key of reservedKeys) {\n    if (component[key]) {\n      res[key] = component[key];\n    }\n  }\n  delete res.children;\n  return res;\n}\nfunction createTabBarOptions({\n  tabBarStyle, activeTintColor, inactiveTintColor, activeBackgroundColor, inactiveBackgroundColor, showLabel, labelStyle, tabStyle, ...props\n}) {\n  return {\n    ...props,\n    style: tabBarStyle,\n    activeTintColor,\n    inactiveTintColor,\n    activeBackgroundColor,\n    inactiveBackgroundColor,\n    showLabel,\n    labelStyle,\n    tabStyle,\n  };\n}\nfunction createNavigationOptions(params) {\n  const {\n    back,\n    backButtonImage,\n    backButtonTextStyle,\n    backTitle,\n    backTitleEnabled,\n    backToInitial,\n    legacy,\n    component,\n    drawerIcon,\n    drawerImage,\n    drawerPosition,\n    getTitle,\n    headerLayoutPreset,\n    headerStyle,\n    headerTitleStyle,\n    hideDrawerButton,\n    hideNavBar,\n    hideTabBar,\n    icon,\n    init,\n    left,\n    leftButton,\n    leftButtonImage,\n    leftButtonTextStyle,\n    leftTitle,\n    navBar,\n    navBarButtonColor,\n    navigationBarStyle,\n    navigationBarTitleImage,\n    navigationBarTitleImageStyle,\n    navTransparent,\n    onLeft,\n    onRight,\n    panHandlers,\n    renderBackButton,\n    renderNavigationBar,\n    renderTitle,\n    right,\n    rightButton,\n    rightButtonImage,\n    rightButtonTextStyle,\n    rightTitle,\n    tabBarIcon,\n    tabBarLabel,\n    title,\n    titleStyle,\n    ...props\n  } = params;\n  const NavBar = renderNavigationBar || navBar;\n  if (component && component.navigationOptions) {\n    return component.navigationOptions;\n  }\n  return ({ navigation, screenProps }) => {\n    const navigationParams = navigation.state.params || {};\n    const state = {\n      navigation,\n      ...params,\n      ...navigationParams,\n      ...screenProps,\n    };\n    const res = {\n      ...props,\n      headerBackImage: navigationParams.backButtonImage || backButtonImage,\n      headerBackTitle: getValue(navigationParams.backTitle || backTitle, state),\n      headerBackTitleEnabled: navigationParams.backTitleEnabled || backTitleEnabled,\n      headerLayoutPreset: navigationParams.headerLayoutPreset || headerLayoutPreset,\n      headerLeft: getValue(navigationParams.left || left || leftButton || params.renderLeftButton, state),\n      headerRight: getValue(navigationParams.right || right || rightButton || params.renderRightButton, state),\n      headerStyle: getValue(navigationParams.headerStyle || headerStyle || navigationBarStyle, state),\n      headerTintColor: navBarButtonColor || props.tintColor || navigationParams.tintColor || navigationParams.headerTintColor,\n      headerTitle: getValue(navigationParams.renderTitle || renderTitle || params.renderTitle, state),\n      headerTitleStyle: headerTitleStyle || titleStyle,\n      title: getValue(navigationParams.title || title || getTitle, state),\n    };\n\n    const NavBarFromParams = navigationParams.renderNavigationBar || navigationParams.navBar;\n    if (NavBarFromParams != null) {\n      if (NavBarFromParams) {\n        res.header = data => <NavBarFromParams navigation={navigation} {...state} {...data} />;\n      }\n    } else if (NavBar) {\n      res.header = data => <NavBar navigation={navigation} {...state} {...data} />;\n    }\n\n    if (typeof navigationParams.panHandlers !== 'undefined') {\n      if (navigationParams.panHandlers === null) {\n        res.gesturesEnabled = false;\n      }\n    } else if (panHandlers === null) {\n      res.gesturesEnabled = false;\n    }\n\n    if (navigationBarTitleImage) {\n      res.headerTitle = <Image source={navigationBarTitleImage} style={navigationBarTitleImageStyle} />;\n    }\n\n    if (tabBarLabel) {\n      res.tabBarLabel = tabBarLabel;\n    }\n\n    if (tabBarIcon || icon) {\n      const Icon = tabBarIcon || icon;\n      res.tabBarIcon = data => <Icon {...state} {...data} />;\n    }\n    const componentData = {};\n    // copy all component static functions\n    if (component) {\n      for (const key of [\n        'onRight',\n        'onLeft',\n        'rightButton',\n        'leftButton',\n        'leftTitle',\n        'rightTitle',\n        'rightButtonImage',\n        'leftButtonImage',\n        'rightButtonTextStyle',\n        'leftButtonTextStyle',\n        'rightButtonIconStyle',\n        'leftButtonIconStyle',\n        'leftButtonTintColor',\n        'rightButtonTintColor',\n      ]) {\n        if (component[key]) {\n          componentData[key] = component[key];\n        }\n      }\n    }\n\n    if (\n      rightButtonImage\n      || rightTitle\n      || params.renderRightButton\n      || onRight\n      || navigationParams.onRight\n      || navigationParams.rightTitle\n      || navigationParams.rightButtonImage\n      || rightButtonTextStyle\n      || ((drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition === 'right')\n    ) {\n      res.headerRight = getValue(navigationParams.right || navigationParams.rightButton || params.renderRightButton, { ...navigationParams, ...screenProps }) || (\n        <RightNavBarButton navigation={navigation} {...params} {...navigationParams} {...componentData} />\n      );\n    }\n\n    if (\n      leftButtonImage\n      || backButtonImage\n      || backTitle\n      || leftTitle\n      || params.renderLeftButton\n      || leftButtonTextStyle\n      || renderBackButton\n      || backButtonTextStyle\n      || onLeft\n      || navigationParams.leftTitle\n      || navigationParams.onLeft\n      || navigationParams.leftButtonImage\n      || navigationParams.backButtonImage\n      || navigationParams.backTitle\n      || ((drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition !== 'right')\n    ) {\n      const leftButton = navigationParams.left || navigationParams.leftButton || params.renderLeftButton;\n      res.headerLeft = getValue(leftButton, { ...params, ...navigationParams, ...screenProps })\n        || (((onLeft && (leftTitle || navigationParams.leftTitle || leftButtonImage || navigationParams.leftButtonImage)) || drawerImage || drawerIcon) && (\n          <LeftNavBarButton navigation={navigation} {...params} {...navigationParams} {...componentData} />\n        ))\n        || res.headerLeft\n        || (init ? null : (!leftButton && renderBackButton && renderBackButton(state)) || (!leftButton && <BackNavBarButton navigation={navigation} {...state} />))\n        || null;\n    }\n\n    if (back) {\n      res.headerLeft = (renderBackButton && renderBackButton(state)) || <BackNavBarButton navigation={navigation} {...state} />;\n    }\n\n    if (typeof navigationParams.left !== 'undefined' || typeof navigationParams.leftButton !== 'undefined' || typeof navigationParams.renderLeftButton !== 'undefined') {\n      if (navigationParams.left === null || navigationParams.leftButton === null || navigationParams.renderLeftButton === null) {\n        res.headerLeft = null;\n      }\n    }\n\n    // currect dynamic navigation params has priority over static scene params\n    // but taking them into account only if they are explicitly set (not null or undefined)\n    const routeParams = navigation.state.routes && navigation.state.routes[navigation.state.index].params;\n    if (navigationParams.hideTabBar != null) {\n      if (navigationParams.hideTabBar) {\n        res.tabBarVisible = false;\n      }\n    } else if (hideTabBar) {\n      res.tabBarVisible = false;\n    } else if (routeParams && routeParams.hideTabBar) {\n      res.tabBarVisible = false;\n    }\n\n    if (navigationParams.hideNavBar != null) {\n      if (navigationParams.hideNavBar) {\n        res.header = null;\n      }\n    } else if (hideNavBar) {\n      res.header = null;\n    }\n\n    if (navTransparent) {\n      res.headerTransparent = true;\n      res.headerStyle = { marginTop: StatusBar.currentHeight };\n    }\n\n    if (!legacy && backToInitial) {\n      const userDefinedTabBarOnPress = res.tabBarOnPress;\n      res.tabBarOnPress = (data) => {\n        if (userDefinedTabBarOnPress) {\n          console.warn('backToInitial and tabBarOnPress were both defined and might cause unexpected navigation behaviors. I hope you know what you are doing ;-)');\n          userDefinedTabBarOnPress(data);\n        }\n        if (data.navigation && data.navigation.state.index !== 0) {\n          data.navigation.dispatch(StackActions.popToTop());\n        } else {\n          data.defaultHandler();\n        }\n      };\n    }\n    return res;\n  };\n}\nfunction originalRouteName(routeName) {\n  if (routeName.startsWith('_')) {\n    return routeName.substring(1);\n  }\n  return routeName;\n}\nfunction isStatelessComponent(Component) {\n  return !Component.prototype || typeof Component.prototype.render !== 'function';\n}\nfunction extendProps(props, store: NavigationStore) {\n  if (!props) {\n    return {};\n  }\n  const res = { ...props };\n  for (const transition of Object.keys(props)) {\n    if (\n      reservedKeys.indexOf(transition) === -1\n      && transition.startsWith('on')\n      && transition.charAt(2) >= 'A'\n      && transition.charAt(2) <= 'Z'\n      && typeof props[transition] === 'string'\n    ) {\n      if (store[props[transition]]) {\n        res[transition] = params => store[props[transition]](params);\n      }\n    }\n  }\n  return res;\n}\n// eslint no-param-reassign: \"error\"\nfunction createWrapper(Component, wrapBy, store: NavigationStore) {\n  if (!Component) {\n    return null;\n  }\n  const wrapper = wrapBy || (props => props);\n\n  // detect if the component is not functional stateless\n  // not sure if Component can be string-defined (\"div\") here\n  // may be there is a better way to detect stateless function component, but this should work\n  if (!isStatelessComponent(Component)) {\n    class Wrapped extends React.Component {\n      static propTypes = {\n        navigation: PropTypes.shape().isRequired,\n      };\n\n      constructor() {\n        super();\n        this.onRef = this.onRef.bind(this);\n      }\n\n      componentDidMount() {\n        const { navigation } = this.props;\n        if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n          store.addRef(originalRouteName(navigation.state.routeName), this.ref);\n        }\n        if (this.ref && this.ref.onEnter) {\n          this.ref.onEnter(navigation && navigation.state);\n        }\n      }\n\n      componentWillUnmount() {\n        const { navigation } = this.props;\n        if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n          store.deleteRef(originalRouteName(navigation.state.routeName));\n        }\n        if (this.ref && this.ref.onExit) {\n          this.ref.onExit(navigation && navigation.state);\n        }\n        this.ref = null;\n      }\n\n      onRef(ref) {\n        this.ref = ref;\n      }\n\n      render() {\n        const { navigation } = this.props;\n        if (!navigation || !navigation.state) {\n          return <Component ref={this.onRef} {...this.props} />;\n        }\n        return <Component ref={this.onRef} {...this.props} {...extendProps(navigation.state.params, store)} name={navigation.state.routeName} />;\n      }\n    }\n    return wrapper(Wrapped);\n  }\n\n  // if component is statless function, ref is not supported\n  function StatelessWrapped({ navigation, ...props }) {\n    return <Component {...props} navigation={navigation} {...extendProps(navigation.state.params, store)} name={navigation.state.routeName} />;\n  }\n  StatelessWrapped.propTypes = {\n    navigation: PropTypes.shape().isRequired,\n  };\n  return wrapper(StatelessWrapped);\n}\n\nfunction filterParam(data = {}) {\n  if (data.toString() !== '[object Object]') {\n    return { data };\n  }\n  const proto = (data || {}).constructor.name;\n  // avoid passing React Native parameters\n  if (!data || proto !== 'Object') {\n    return {};\n  }\n  return data;\n}\n\nfunction uniteParams(routeName, params) {\n  let res = {};\n  for (const param of params) {\n    if (param) {\n      res = { ...res, ...filterParam(param) };\n    }\n  }\n  res.routeName = routeName;\n  return res;\n}\n\nconst defaultSuccess = () => {};\nconst defaultFailure = () => {};\n\nclass NavigationStore {\n  getStateForAction = null;\n\n  reducer = null;\n\n  _navigator = null;\n\n  externalDispatch = null;\n\n  externalState = null;\n\n  prevState = null;\n\n  externalAction = {};\n\n  refs = {};\n\n  states = {};\n\n  currentScene;\n\n  prevScene;\n\n  currentParams;\n\n  onStateChange;\n\n  set externalState(state) {\n    if (state && this.externalDispatch) {\n      this.onNavigationStateChange(this.state, state, this.externalAction);\n      this.state = state;\n    }\n  }\n\n  setCustomReducer = (Navigator) => {\n    this.getStateForAction = Navigator.router.getStateForAction;\n    const reducer = createReducer();\n    Navigator.router.getStateForAction = (cmd, state) => (this.reducer ? this.reducer(state, cmd) : reducer(state, cmd));\n  };\n\n  onEnterHandler = async (currentScene) => {\n    if (this.states[currentScene]) {\n      const handler = this[currentScene + OnEnter];\n      const success = this.states[currentScene].success || defaultSuccess;\n      const failure = this.states[currentScene].failure || defaultFailure;\n      if (handler) {\n        try {\n          const res = await handler(this.currentParams, this.state);\n          if (res) {\n            success(res);\n          } else {\n            failure();\n          }\n        } catch (e) {\n          failure({ error: e.message });\n        }\n      }\n    }\n  };\n\n  onExitHandler = (prevScene) => {\n    if (prevScene) {\n      const exitHandler = this[prevScene + OnExit];\n      if (exitHandler) {\n        try {\n          const res = exitHandler(this.state);\n          if (res instanceof Promise) {\n            res.then(defaultSuccess, defaultFailure);\n          }\n        } catch (e) {\n          console.error('Error during onExit handler:', e);\n        }\n      }\n    }\n  };\n\n  onNavigationStateChange = async (prevState, currentState, action) => {\n    this.state = currentState;\n    this.prevState = prevState;\n    const activeState = getActiveState(this.state);\n    const currentScene = activeState.routeName;\n    this.currentParams = { ...activeState.params, ...action.params };\n    this.currentScene = currentScene;\n    this.prevScene = this.prevState ? getActiveState(this.prevState).routeName : null;\n    if (this.currentScene !== this.prevScene) {\n      // run onExit for old scene\n      this.onExitHandler(this.prevScene);\n      setTimeout(() => this.dispatch({\n        type: ActionConst.FOCUS,\n        routeName: this.currentScene,\n        params: this.currentParams,\n      }));\n      this.onEnterHandler(currentScene);\n    } else {\n      const routeName = getRouteNameByKey(this.state, action.key);\n      if (action.type === 'Navigation/DRAWER_OPENED') {\n        this.onEnterHandler(routeName);\n      } else if (action.type === 'Navigation/DRAWER_CLOSED') {\n        this.onExitHandler(routeName);\n      }\n    }\n    if (this.onStateChange) {\n      this.onStateChange(prevState, currentState, action);\n    }\n  };\n\n  setTopLevelNavigator = (navigatorRef) => {\n    this._navigator = navigatorRef;\n  };\n\n  addRef = (name, ref) => {\n    this.refs[name] = ref;\n  };\n\n  deleteRef = (name) => {\n    delete this.refs[name];\n  };\n\n  create = (scene: Scene, params = {}, wrapBy = props => props) => {\n    assert(!Array.isArray(scene), 'Router should contain only one scene, please wrap your scenes with root Scene ');\n    RightNavBarButton = wrapBy(RightButton);\n    LeftNavBarButton = wrapBy(LeftButton);\n    BackNavBarButton = wrapBy(BackButton);\n    const Navigator = this.processScene(scene, params, [], wrapBy);\n    // set initial state\n    this.onNavigationStateChange(null, Navigator.router.getStateForAction(NavigationActions.init()), NavigationActions.init());\n    this.setCustomReducer(Navigator);\n\n    return Navigator;\n  };\n\n  processScene = (scene: Scene, inheritProps = {}, clones = [], wrapBy) => {\n    assert(scene.props, 'props should be defined');\n    if (!scene.props.children) {\n      return null;\n    }\n    const res = {};\n    const order = [];\n    const {\n      navigator, renderer, contentComponent, drawerWidth, drawerLockMode, tabBarPosition, lazy, duration, ...parentProps\n    } = scene.props;\n    let {\n      legacy, tabs, modal, lightbox, overlay, drawer, transitionConfig, tabBarComponent,\n    } = parentProps;\n    if (scene.type === Modal) {\n      modal = true;\n    } else if (scene.type === Drawer) {\n      drawer = true;\n    } else if (scene.type === Lightbox) {\n      lightbox = true;\n    } else if (scene.type === Tabs) {\n      tabs = true;\n    } else if (scene.type === LegacyTabs) {\n      tabs = true;\n      legacy = true;\n    } else if (scene.type === Overlay) {\n      overlay = true;\n    }\n\n    if (duration !== undefined && !transitionConfig) {\n      transitionConfig = () => ({\n        transitionSpec: {\n          duration,\n          timing: Animated.timing,\n          easing: Easing.step0,\n        },\n      });\n    }\n\n    const commonProps = { ...inheritProps, ...parentProps };\n    delete commonProps.children;\n    delete commonProps.component;\n    // add inherit props\n    for (const pkey of Object.keys(commonProps)) {\n      if (dontInheritKeys.includes(pkey) && (pkey === 'type' || pkey === 'hideNavBar' || !parentProps[pkey])) {\n        delete commonProps[pkey];\n      }\n    }\n\n    if (drawer) {\n      commonProps.drawerImage = commonProps.drawerImage || _drawerImage;\n    }\n\n    const children = !Array.isArray(parentProps.children) ? [parentProps.children] : [].concat(...parentProps.children);\n    // add clone scenes\n    if (!drawer && !tabs && !overlay) {\n      children.push(...clones);\n    }\n    // add all clones\n    for (const child of children) {\n      if (child && child.props.clone) {\n        if (clones.indexOf(child) === -1) {\n          clones.push(child);\n        }\n      }\n    }\n    let initialRouteName;\n    let initialRouteParams;\n    for (const child of children) {\n      // allow null/false child, useful for conditionals\n      if (!child) {\n        continue;\n      }\n      const key = child.key || `key${(counter += 1)}`;\n      const init = key === children[0].key;\n      assert(reservedKeys.indexOf(key) === -1, `Scene name cannot be reserved word: ${child.key}`);\n      const {\n        component, type = tabs || drawer ? 'jump' : 'push', path, onEnter, onExit, on, failure, success, wrap, initial = false, ...props\n      } = child.props;\n      if (!this.states[key]) {\n        this.states[key] = {};\n      }\n      for (const transition of Object.keys(props)) {\n        if (reservedKeys.indexOf(transition) === -1 && props[transition] instanceof Function) {\n          this.states[key][transition] = props[transition];\n        }\n      }\n      delete props.children;\n      if (success) {\n        this.states[key].success = success instanceof Function\n          ? success\n          : (args) => {\n            // console.log(`Transition to state=${success}`);\n            this[success](args);\n          };\n      }\n      if (failure) {\n        this.states[key].failure = failure instanceof Function\n          ? failure\n          : (args) => {\n            // console.log(`Transition to state=${failure}`);\n            this[failure](args);\n          };\n      }\n      if (path) {\n        this.states[key].path = path;\n      }\n      // console.log(`KEY ${key} LEGACY {legacy} PATH ${path} DRAWER ${drawer} TABS ${tabs} WRAP ${wrap}`, JSON.stringify(commonProps));\n      const screen = {\n        screen: createWrapper(component, wrapBy, this) || this.processScene(child, commonProps, clones) || (lightbox && (() => null)),\n        navigationOptions: createNavigationOptions({\n          ...commonProps,\n          hideNavBar: parentProps.hideNavBar,\n          ...getProperties(component),\n          ...child.props,\n          init,\n          component,\n        }),\n      };\n\n      // wrap component inside own navbar for tabs/drawer parent controllers\n      // don't wrap child scenes for custom navigators/renderers\n      let wrapNavBar = drawer || (tabs && !navigator && !renderer) || wrap;\n      if (wrap === false || commonProps.wrap === false) {\n        wrapNavBar = false;\n      }\n      if (component && wrapNavBar) {\n        res[key] = {\n          screen: this.processScene(\n            {\n              key,\n              props: {\n                children: {\n                  key: `_${key}`,\n                  props: { ...child.props, wrap: false },\n                },\n              },\n            },\n            commonProps,\n            clones,\n            wrapBy,\n          ),\n          navigationOptions: createNavigationOptions({\n            ...commonProps,\n            ...child.props,\n            hideNavBar: true,\n          }),\n        };\n      } else {\n        res[key] = screen;\n      }\n\n      // a bit of magic, create all 'actions'-shortcuts inside navigationStore\n      props.init = true;\n      if (!this[key]) {\n        this[key] = new Function(\n          'actions',\n          'props',\n          'type',\n          `return function ${\n            key.replace(/\\W/g, '_') // eslint-disable-line no-new-func\n          }(params){ actions.execute(type, '${key}', props, params)}`,\n        )(this, { error: '', ...commonProps, ...props }, type);\n      }\n\n      if ((onEnter || on || (component && component.onEnter)) && !this[key + OnEnter]) {\n        this[key + OnEnter] = onEnter || on || component.onEnter;\n      }\n\n      if ((onExit || (component && component.onExit)) && !this[key + OnExit]) {\n        this[key + OnExit] = onExit || component.onExit;\n      }\n\n      order.push(key);\n      if (initial || child.props.initial || !initialRouteName) {\n        initialRouteName = key;\n        initialRouteParams = { ...commonProps, ...props };\n      }\n    }\n    const mode = modal ? 'modal' : 'card';\n    const navigationConfig = {\n      lazy,\n      initialRouteName,\n      initialRouteParams,\n      contentComponent,\n      order,\n      ...commonProps,\n      navigationOptions: createNavigationOptions(commonProps),\n    };\n    if (navigator) {\n      return navigator(res, navigationConfig);\n    }\n    if (renderer) {\n      return tabs ? createTabNavigatorHOC(renderer)(res, navigationConfig) : createStackNavigatorHOC(renderer)(res, navigationConfig);\n    }\n    if (lightbox) {\n      return createStackNavigatorHOC(LightboxRenderer)(res, {\n        mode,\n        initialRouteParams,\n        initialRouteName,\n        ...commonProps,\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n\n    if (tabs) {\n      let createTabNavigator = createMaterialTopTabNavigator;\n      if (legacy) {\n        createTabNavigator = DEPRECATED_createTabNavigator;\n        if (!tabBarComponent) {\n          tabBarComponent = tabBarPosition === 'top' ? props => <DEPRECATED_TabBarTop {...props} {...commonProps} /> : props => <DEPRECATED_TabBarBottom {...props} {...commonProps} />;\n        }\n      } else if (tabBarPosition !== 'top') {\n        createTabNavigator = createBottomTabNavigator;\n      }\n\n      return createTabNavigator(res, {\n        lazy,\n        tabBarComponent,\n        initialRouteName,\n        initialRouteParams,\n        tabBarPosition,\n        order,\n        ...commonProps,\n        tabBarOptions: createTabBarOptions(commonProps),\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n\n    if (drawer) {\n      const config = {\n        initialRouteName,\n        contentComponent,\n        order,\n        drawerOpenRoute: 'DrawerOpen',\n        drawerCloseRoute: 'DrawerClose',\n        drawerToggleRoute: 'DrawerToggle',\n        ...commonProps,\n      };\n      if (drawerWidth) {\n        config.drawerWidth = drawerWidth;\n      }\n      if (drawerLockMode) {\n        config.drawerLockMode = drawerLockMode;\n      }\n      return createDrawerNavigator(res, config);\n    }\n\n    if (overlay) {\n      return createTabNavigatorHOC(OverlayRenderer)(res, {\n        lazy,\n        initialRouteName,\n        contentComponent,\n        initialRouteParams,\n        order,\n        ...commonProps,\n        tabBarOptions: createTabBarOptions(commonProps),\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n    return createStackNavigator(res, {\n      mode,\n      initialRouteParams,\n      initialRouteName,\n      ...commonProps,\n      transitionConfig,\n      navigationOptions: createNavigationOptions(commonProps),\n    });\n  };\n\n  dispatch = (action) => {\n    if (this.externalDispatch) {\n      this.externalAction = action;\n      this.externalDispatch(action);\n    } else if (this._navigator) {\n      this._navigator.dispatch(action);\n    }\n  };\n\n  execute = (actionType, routeName, ...params) => {\n    const res = uniteParams(routeName, params);\n    const overridenType = res.type || actionType;\n    const type = actionMap[overridenType] || overridenType;\n    if (type === 'pop') {\n      this[type](res);\n    } else {\n      this[type](routeName, res);\n    }\n  };\n\n  push = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: StackActions.PUSH, routeName, params });\n  };\n\n  jump = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: NavigationActions.NAVIGATE, routeName, params });\n  };\n\n  drawerOpen = () => {\n    this.dispatch(DrawerActions.openDrawer());\n  };\n\n  drawerClose = () => {\n    this.dispatch(DrawerActions.closeDrawer());\n  };\n\n  drawerToggle = () => {\n    this.dispatch(DrawerActions.toggleDrawer());\n  };\n\n  refresh = (data, sceneKey = null) => {\n    const params = filterParam(data);\n    const { key } = getActiveState(this.state);\n    this.dispatch(\n      NavigationActions.setParams({\n        key: sceneKey || key,\n        params,\n      }),\n    );\n  };\n\n  pop = ({ timeout, key, ...params } = {}) => {\n    const res = filterParam(params);\n    if (timeout) {\n      setTimeout(() => this.pop(params), timeout);\n    } else {\n      this.dispatch(NavigationActions.back({ key }));\n      if (res.refresh) {\n        this.refresh(res.refresh);\n      }\n    }\n    return true;\n  };\n\n  popTo = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.POP_TO, routeName, params });\n  };\n\n  popAndPush = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.POP_AND_PUSH, routeName, params });\n  };\n\n  replace = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.REPLACE, routeName, params });\n  };\n\n  reset = (routeName, data) => {\n    const params = filterParam(data);\n    const parent = getParent(this.state, routeName);\n    this.dispatch(\n      StackActions.reset({\n        index: 0,\n        key: parent ? parent.key : null,\n        actions: [\n          NavigationActions.navigate({\n            routeName,\n            params,\n          }),\n        ],\n      }),\n    );\n  };\n}\n\nexport default new NavigationStore();\n"]},"metadata":{},"sourceType":"module"}