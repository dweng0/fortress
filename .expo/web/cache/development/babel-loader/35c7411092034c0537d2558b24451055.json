{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\fortress\\\\node_modules\\\\react-navigation-deprecated-tab-navigator\\\\src\\\\views\\\\TabBarIcon.js\";\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default class TabBarIcon extends React.PureComponent {\n  render() {\n    var {\n      position,\n      scene,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      style\n    } = this.props;\n    var {\n      route,\n      index\n    } = scene;\n    var {\n      routes\n    } = navigation.state;\n    var inputRange = [-1, ...routes.map((x, i) => i)];\n    var activeOpacity = position.interpolate({\n      inputRange,\n      outputRange: inputRange.map(i => i === index ? 1 : 0)\n    });\n    var inactiveOpacity = position.interpolate({\n      inputRange,\n      outputRange: inputRange.map(i => i === index ? 0 : 1)\n    });\n    return React.createElement(View, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      }\n    }, React.createElement(Animated.View, {\n      style: [styles.icon, {\n        opacity: activeOpacity\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      }\n    }, this.props.renderIcon({\n      route,\n      index,\n      focused: true,\n      tintColor: activeTintColor\n    })), React.createElement(Animated.View, {\n      style: [styles.icon, {\n        opacity: inactiveOpacity\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      }\n    }, this.props.renderIcon({\n      route,\n      index,\n      focused: false,\n      tintColor: inactiveTintColor\n    })));\n  }\n\n}\nvar styles = StyleSheet.create({\n  icon: {\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 30\n  }\n});","map":{"version":3,"sources":["G:/projects/fortress/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabBarIcon.js"],"names":["React","TabBarIcon","PureComponent","render","position","scene","navigation","activeTintColor","inactiveTintColor","style","props","route","index","routes","state","inputRange","map","x","i","activeOpacity","interpolate","outputRange","inactiveOpacity","styles","icon","opacity","renderIcon","focused","tintColor","StyleSheet","create","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,eAAe,MAAMC,UAAN,SAAyBD,KAAK,CAACE,aAA/B,CAA6C;AAC1DC,EAAAA,MAAM,GAAG;AACP,QAAM;AACJC,MAAAA,QADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,UAHI;AAIJC,MAAAA,eAJI;AAKJC,MAAAA,iBALI;AAMJC,MAAAA;AANI,QAOF,KAAKC,KAPT;AAQA,QAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBP,KAAzB;AACA,QAAM;AAAEQ,MAAAA;AAAF,QAAaP,UAAU,CAACQ,KAA9B;AAEA,QAAMC,UAAU,GAAG,CAAC,CAAC,CAAF,EAAK,GAAGF,MAAM,CAACG,GAAP,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAArB,CAAR,CAAnB;AACA,QAAMC,aAAa,GAAGf,QAAQ,CAACgB,WAAT,CAAqB;AACzCL,MAAAA,UADyC;AAEzCM,MAAAA,WAAW,EAAEN,UAAU,CAACC,GAAX,CAAeE,CAAC,IAAKA,CAAC,KAAKN,KAAN,GAAc,CAAd,GAAkB,CAAvC;AAF4B,KAArB,CAAtB;AAIA,QAAMU,eAAe,GAAGlB,QAAQ,CAACgB,WAAT,CAAqB;AAC3CL,MAAAA,UAD2C;AAE3CM,MAAAA,WAAW,EAAEN,UAAU,CAACC,GAAX,CAAeE,CAAC,IAAKA,CAAC,KAAKN,KAAN,GAAc,CAAd,GAAkB,CAAvC;AAF8B,KAArB,CAAxB;AAOA,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE,CAACc,MAAM,CAACC,IAAR,EAAc;AAAEC,QAAAA,OAAO,EAAEN;AAAX,OAAd,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWgB,UAAX,CAAsB;AACrBf,MAAAA,KADqB;AAErBC,MAAAA,KAFqB;AAGrBe,MAAAA,OAAO,EAAE,IAHY;AAIrBC,MAAAA,SAAS,EAAErB;AAJU,KAAtB,CADH,CADF,EASE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE,CAACgB,MAAM,CAACC,IAAR,EAAc;AAAEC,QAAAA,OAAO,EAAEH;AAAX,OAAd,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWgB,UAAX,CAAsB;AACrBf,MAAAA,KADqB;AAErBC,MAAAA,KAFqB;AAGrBe,MAAAA,OAAO,EAAE,KAHY;AAIrBC,MAAAA,SAAS,EAAEpB;AAJU,KAAtB,CADH,CATF,CADF;AAoBD;;AA7CyD;AAgD5D,IAAMe,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,IAAI,EAAE;AAIJpB,IAAAA,QAAQ,EAAE,UAJN;AAKJ2B,IAAAA,SAAS,EAAE,QALP;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJC,IAAAA,cAAc,EAAE,QAPZ;AAQJC,IAAAA,MAAM,EAAE,MARJ;AASJC,IAAAA,KAAK,EAAE,MATH;AAUJC,IAAAA,QAAQ,EAAE;AAVN;AADyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\n\nexport default class TabBarIcon extends React.PureComponent {\n  render() {\n    const {\n      position,\n      scene,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      style,\n    } = this.props;\n    const { route, index } = scene;\n    const { routes } = navigation.state;\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n    const activeOpacity = position.interpolate({\n      inputRange,\n      outputRange: inputRange.map(i => (i === index ? 1 : 0)),\n    });\n    const inactiveOpacity = position.interpolate({\n      inputRange,\n      outputRange: inputRange.map(i => (i === index ? 0 : 1)),\n    });\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return (\n      <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {this.props.renderIcon({\n            route,\n            index,\n            focused: true,\n            tintColor: activeTintColor,\n          })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {this.props.renderIcon({\n            route,\n            index,\n            focused: false,\n            tintColor: inactiveTintColor,\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 30,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}