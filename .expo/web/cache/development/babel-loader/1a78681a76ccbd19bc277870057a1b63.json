{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\fortress\\\\node_modules\\\\react-native-tab-view\\\\src\\\\TabViewPagerScroll.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PagerRendererPropType } from \"./TabViewPropTypes\";\nexport default class TabViewPagerScroll extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this._isIdle = true;\n    this._isInitial = true;\n\n    this._setInitialPage = () => {\n      if (this.props.layout.width) {\n        this._isInitial = true;\n\n        this._scrollTo(this.props.navigationState.index * this.props.layout.width, false);\n      }\n\n      setTimeout(() => {\n        this._isInitial = false;\n      }, 50);\n    };\n\n    this._scrollTo = function (x) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (_this._isIdle && _this._scrollView) {\n        _this._scrollView.scrollTo({\n          x,\n          animated: animated && _this.props.animationEnabled !== false\n        });\n      }\n    };\n\n    this._handleMomentumScrollEnd = e => {\n      var nextIndex = Math.round(e.nativeEvent.contentOffset.x / this.props.layout.width);\n      var nextRoute = this.props.navigationState.routes[nextIndex];\n\n      if (this.props.canJumpToTab(nextRoute)) {\n        this.props.jumpTo(nextRoute.key);\n        this.props.onAnimationEnd && this.props.onAnimationEnd();\n      } else {\n        global.requestAnimationFrame(() => {\n          this._scrollTo(this.props.navigationState.index * this.props.layout.width);\n        });\n      }\n    };\n\n    this._handleScroll = e => {\n      if (this._isInitial || e.nativeEvent.contentSize.width === 0) {\n        return;\n      }\n\n      var {\n        navigationState,\n        layout\n      } = this.props;\n      var offset = navigationState.index * layout.width;\n      this.props.offsetX.setValue(-offset);\n      this.props.panX.setValue(offset - e.nativeEvent.contentOffset.x);\n      global.cancelAnimationFrame(this._idleCallback);\n      this._isIdle = false;\n      this._idleCallback = global.requestAnimationFrame(() => {\n        this._isIdle = true;\n      });\n    };\n\n    var {\n      navigationState: _navigationState,\n      layout: _layout\n    } = this.props;\n    this.state = {\n      initialOffset: {\n        x: _navigationState.index * _layout.width,\n        y: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._setInitialPage();\n  }\n\n  componentDidUpdate(prevProps) {\n    var amount = this.props.navigationState.index * this.props.layout.width;\n\n    if (prevProps.navigationState.routes !== this.props.navigationState.routes || prevProps.layout.width !== this.props.layout.width) {\n      this._scrollTo(amount, false);\n    } else if (prevProps.navigationState.index !== this.props.navigationState.index) {\n      this._scrollTo(amount);\n    }\n  }\n\n  render() {\n    var {\n      children,\n      layout,\n      navigationState,\n      onSwipeStart,\n      onSwipeEnd\n    } = this.props;\n    return React.createElement(ScrollView, {\n      horizontal: true,\n      pagingEnabled: true,\n      directionalLockEnabled: true,\n      keyboardDismissMode: \"on-drag\",\n      keyboardShouldPersistTaps: \"always\",\n      overScrollMode: \"never\",\n      scrollEnabled: this.props.swipeEnabled,\n      automaticallyAdjustContentInsets: false,\n      bounces: false,\n      alwaysBounceHorizontal: false,\n      scrollsToTop: false,\n      showsHorizontalScrollIndicator: false,\n      scrollEventThrottle: 1,\n      onScroll: this._handleScroll,\n      onScrollBeginDrag: onSwipeStart,\n      onScrollEndDrag: onSwipeEnd,\n      onMomentumScrollEnd: this._handleMomentumScrollEnd,\n      contentOffset: this.state.initialOffset,\n      style: styles.container,\n      contentContainerStyle: layout.width ? null : styles.container,\n      ref: el => this._scrollView = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      }\n    }, React.Children.map(children, (child, i) => React.createElement(View, {\n      key: navigationState.routes[i].key,\n      testID: navigationState.routes[i].testID,\n      style: layout.width ? {\n        width: layout.width,\n        overflow: 'hidden'\n      } : i === navigationState.index ? styles.page : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      }\n    }, i === navigationState.index || layout.width ? child : null)));\n  }\n\n}\nTabViewPagerScroll.propTypes = PagerRendererPropType;\nTabViewPagerScroll.defaultProps = {\n  canJumpToTab: () => true\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  page: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["G:/projects/fortress/node_modules/react-native-tab-view/src/TabViewPagerScroll.js"],"names":["React","PagerRendererPropType","TabViewPagerScroll","Component","constructor","props","_isIdle","_isInitial","_setInitialPage","layout","width","_scrollTo","navigationState","index","setTimeout","x","animated","_scrollView","scrollTo","animationEnabled","_handleMomentumScrollEnd","e","nextIndex","Math","round","nativeEvent","contentOffset","nextRoute","routes","canJumpToTab","jumpTo","key","onAnimationEnd","global","requestAnimationFrame","_handleScroll","contentSize","offset","offsetX","setValue","panX","cancelAnimationFrame","_idleCallback","state","initialOffset","y","componentDidMount","componentDidUpdate","prevProps","amount","render","children","onSwipeStart","onSwipeEnd","swipeEnabled","styles","container","el","Children","map","child","i","testID","overflow","page","propTypes","defaultProps","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, ScrollView, StyleSheet } from 'react-native';\nimport { PagerRendererPropType } from './TabViewPropTypes';\nimport type { PagerRendererProps } from './TabViewTypeDefinitions';\n\ntype ScrollEvent = {\n  nativeEvent: {\n    contentOffset: {\n      x: number,\n      y: number,\n    },\n    contentSize: {\n      height: number,\n      width: number,\n    },\n  },\n};\n\ntype State = {|\n  initialOffset: {| x: number, y: number |},\n|};\n\ntype Props<T> = PagerRendererProps<T>;\n\nexport default class TabViewPagerScroll<T: *> extends React.Component<\n  Props<T>,\n  State\n> {\n  static propTypes = PagerRendererPropType;\n\n  static defaultProps = {\n    canJumpToTab: () => true,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    const { navigationState, layout } = this.props;\n\n    this.state = {\n      initialOffset: {\n        x: navigationState.index * layout.width,\n        y: 0,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this._setInitialPage();\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const amount = this.props.navigationState.index * this.props.layout.width;\n\n    if (\n      prevProps.navigationState.routes !== this.props.navigationState.routes ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this._scrollTo(amount, false);\n    } else if (\n      prevProps.navigationState.index !== this.props.navigationState.index\n    ) {\n      this._scrollTo(amount);\n    }\n  }\n\n  _scrollView: ?ScrollView;\n  _idleCallback: any;\n  _isIdle: boolean = true;\n  _isInitial: boolean = true;\n\n  _setInitialPage = () => {\n    if (this.props.layout.width) {\n      this._isInitial = true;\n      this._scrollTo(\n        this.props.navigationState.index * this.props.layout.width,\n        false\n      );\n    }\n\n    setTimeout(() => {\n      this._isInitial = false;\n    }, 50);\n  };\n\n  _scrollTo = (x: number, animated = true) => {\n    if (this._isIdle && this._scrollView) {\n      this._scrollView.scrollTo({\n        x,\n        animated: animated && this.props.animationEnabled !== false,\n      });\n    }\n  };\n\n  _handleMomentumScrollEnd = (e: ScrollEvent) => {\n    let nextIndex = Math.round(\n      e.nativeEvent.contentOffset.x / this.props.layout.width\n    );\n\n    const nextRoute = this.props.navigationState.routes[nextIndex];\n\n    if (this.props.canJumpToTab(nextRoute)) {\n      this.props.jumpTo(nextRoute.key);\n      this.props.onAnimationEnd && this.props.onAnimationEnd();\n    } else {\n      global.requestAnimationFrame(() => {\n        this._scrollTo(\n          this.props.navigationState.index * this.props.layout.width\n        );\n      });\n    }\n  };\n\n  _handleScroll = (e: ScrollEvent) => {\n    if (this._isInitial || e.nativeEvent.contentSize.width === 0) {\n      return;\n    }\n\n    const { navigationState, layout } = this.props;\n    const offset = navigationState.index * layout.width;\n\n    this.props.offsetX.setValue(-offset);\n    this.props.panX.setValue(offset - e.nativeEvent.contentOffset.x);\n\n    global.cancelAnimationFrame(this._idleCallback);\n\n    this._isIdle = false;\n    this._idleCallback = global.requestAnimationFrame(() => {\n      this._isIdle = true;\n    });\n  };\n\n  render() {\n    const {\n      children,\n      layout,\n      navigationState,\n      onSwipeStart,\n      onSwipeEnd,\n    } = this.props;\n\n    return (\n      <ScrollView\n        horizontal\n        pagingEnabled\n        directionalLockEnabled\n        keyboardDismissMode=\"on-drag\"\n        keyboardShouldPersistTaps=\"always\"\n        overScrollMode=\"never\"\n        scrollEnabled={this.props.swipeEnabled}\n        automaticallyAdjustContentInsets={false}\n        bounces={false}\n        alwaysBounceHorizontal={false}\n        scrollsToTop={false}\n        showsHorizontalScrollIndicator={false}\n        scrollEventThrottle={1}\n        onScroll={this._handleScroll}\n        onScrollBeginDrag={onSwipeStart}\n        onScrollEndDrag={onSwipeEnd}\n        onMomentumScrollEnd={this._handleMomentumScrollEnd}\n        contentOffset={this.state.initialOffset}\n        style={styles.container}\n        contentContainerStyle={layout.width ? null : styles.container}\n        ref={el => (this._scrollView = el)}\n      >\n        {React.Children.map(children, (child, i) => (\n          <View\n            key={navigationState.routes[i].key}\n            testID={navigationState.routes[i].testID}\n            style={\n              layout.width\n                ? { width: layout.width, overflow: 'hidden' }\n                : i === navigationState.index ? styles.page : null\n            }\n          >\n            {i === navigationState.index || layout.width ? child : null}\n          </View>\n        ))}\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  page: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}